{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://hypercritical/./node_modules/@firebase/database/dist/index.esm2017.js","webpack://hypercritical/./node_modules/@firebase/util/dist/index.esm2017.js","webpack://hypercritical/./js/main/code-anime/item.js","webpack://hypercritical/./js/main/code-anime/utils.js","webpack://hypercritical/./node_modules/lozad/dist/lozad.min.js","webpack://hypercritical/./node_modules/mouse-follower/dist/index.module.js","webpack://hypercritical/./node_modules/@firebase/app/dist/esm/index.esm2017.js","webpack://hypercritical/./node_modules/@firebase/component/dist/esm/index.esm2017.js","webpack://hypercritical/./node_modules/@firebase/logger/dist/esm/index.esm2017.js","webpack://hypercritical/./node_modules/firebase/app/dist/esm/index.esm.js","webpack://hypercritical/./node_modules/idb/build/index.js","webpack://hypercritical/./node_modules/idb/build/wrap-idb-value.js","webpack://hypercritical/webpack/bootstrap","webpack://hypercritical/webpack/runtime/compat get default export","webpack://hypercritical/webpack/runtime/define property getters","webpack://hypercritical/webpack/runtime/global","webpack://hypercritical/webpack/runtime/hasOwnProperty shorthand","webpack://hypercritical/webpack/runtime/make namespace object","webpack://hypercritical/./js/main/index.js"],"sourcesContent":["import { _getProvider, getApp, SDK_VERSION as SDK_VERSION$1, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component, ComponentContainer, Provider } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, stringToByteArray, Sha1, base64, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, getDefaultEmulatorHostnameAndPort, createMockUserToken } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nconst name = \"@firebase/database\";\nconst version = \"1.0.3\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nlet SDK_VERSION = '';\r\n/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nclass DOMStorageWrapper {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    constructor(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    set(key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    }\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    get(key) {\r\n        const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    }\r\n    remove(key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    }\r\n    prefixedName_(name) {\r\n        return this.prefix_ + name;\r\n    }\r\n    toString() {\r\n        return this.domStorage_.toString();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    set(key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    }\r\n    get(key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    }\r\n    remove(key) {\r\n        delete this.cache_[key];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nconst createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            const domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nconst PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nconst SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nconst LUIDGenerator = (function () {\r\n    let id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nconst sha1 = function (str) {\r\n    const utf8Bytes = stringToByteArray(str);\r\n    const sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    const sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nconst buildLogMessage_ = function (...varArgs) {\r\n    let message = '';\r\n    for (let i = 0; i < varArgs.length; i++) {\r\n        const arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nlet logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nlet firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nconst enableLogging$1 = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nconst log = function (...varArgs) {\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging$1(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        const message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nconst logWrapper = function (prefix) {\r\n    return function (...varArgs) {\r\n        log(prefix, ...varArgs);\r\n    };\r\n};\r\nconst error = function (...varArgs) {\r\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\r\n    logClient.error(message);\r\n};\r\nconst fatal = function (...varArgs) {\r\n    const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nconst warn = function (...varArgs) {\r\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nconst warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nconst isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nconst executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        let called = false;\r\n        const wrappedFn = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called) {\r\n                called = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', () => {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nconst MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nconst MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nconst nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nconst stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nconst requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nconst ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    const keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    let key = '{';\r\n    for (let i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nconst splitStringBySize = function (str, segsize) {\r\n    const len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    const dataSegs = [];\r\n    for (let c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nconst doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    const ebits = 11, fbits = 52;\r\n    const bias = (1 << (ebits - 1)) - 1;\r\n    let s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    const bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    const str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    let hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nconst isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nconst isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    let reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    const error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nconst INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nconst tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        const intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nconst exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(() => {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            const stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nconst beingCrawled = function () {\r\n    const userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nconst setTimeoutNonBlocking = function (fn, time) {\r\n    const timeout = setTimeout(fn, time);\r\n    // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\r\n    if (typeof timeout === 'number' &&\r\n        // @ts-ignore Is only defined in Deno environments.\r\n        typeof Deno !== 'undefined' &&\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno['unrefTimer']) {\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno.unrefTimer(timeout);\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    }\r\n    else if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nclass AppCheckTokenProvider {\r\n    constructor(appName_, appCheckProvider) {\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => (this.appCheck = appCheck));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.appCheck) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.appCheck) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(appCheck => appCheck.addTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        warn(`Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nclass FirebaseAuthTokenProvider {\r\n    constructor(appName_, firebaseOptions_, authProvider_) {\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(auth => (this.auth_ = auth));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.auth_) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timoeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.auth_) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(error => {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(auth => auth.addAuthTokenListener(listener));\r\n        }\r\n    }\r\n    removeTokenChangeListener(listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(auth => auth.removeAuthTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        let errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    }\r\n}\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nclass EmulatorTokenProvider {\r\n    constructor(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    getToken(forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    }\r\n    removeTokenChangeListener(listener) { }\r\n    notifyForInvalidToken() { }\r\n}\r\n/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\nEmulatorTokenProvider.OWNER = 'owner';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PROTOCOL_VERSION = '5';\r\nconst VERSION_PARAM = 'v';\r\nconst TRANSPORT_SESSION_PARAM = 's';\r\nconst REFERER_PARAM = 'r';\r\nconst FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nconst FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nconst LAST_SESSION_PARAM = 'ls';\r\nconst APPLICATION_ID_PARAM = 'p';\r\nconst APP_CHECK_TOKEN_PARAM = 'ac';\r\nconst WEBSOCKET = 'websocket';\r\nconst LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nclass RepoInfo {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    constructor(host, secure, namespace, webSocketOnly, nodeAdmin = false, persistenceKey = '', includeNamespaceInQueryParams = false, isUsingEmulator = false) {\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.isUsingEmulator = isUsingEmulator;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    isCacheableHost() {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    }\r\n    isCustomHost() {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    }\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this._host, this.internalHost);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        let str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    }\r\n    toURLString() {\r\n        const protocol = this.secure ? 'https://' : 'http://';\r\n        const query = this.includeNamespaceInQueryParams\r\n            ? `?ns=${this.namespace}`\r\n            : '';\r\n        return `${protocol}${this.host}/${query}`;\r\n    }\r\n}\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    let connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    const pairs = [];\r\n    each(params, (key, value) => {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nclass StatsCollection {\r\n    constructor() {\r\n        this.counters_ = {};\r\n    }\r\n    incrementCounter(name, amount = 1) {\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    }\r\n    get() {\r\n        return deepCopy(this.counters_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst collections = {};\r\nconst reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    const hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    const hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nclass PacketReceiver {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    constructor(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    closeAfter(responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    }\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    handleResponse(requestNum, data) {\r\n        this.pendingResponses[requestNum] = data;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            const toProcess = this.pendingResponses[this.currentResponseNum];\r\n            delete this.pendingResponses[this.currentResponseNum];\r\n            for (let i = 0; i < toProcess.length; ++i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(() => {\r\n                        this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            }\r\n            if (this.currentResponseNum === this.closeAfterResponse) {\r\n                if (this.onClose) {\r\n                    this.onClose();\r\n                    this.onClose = null;\r\n                }\r\n                break;\r\n            }\r\n            this.currentResponseNum++;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nconst FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nconst FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nconst FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nconst FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nconst FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nconst FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nconst FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nconst FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nconst FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nconst FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nconst FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nconst FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nconst MAX_URL_DATA_SIZE = 1870;\r\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nconst LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nclass BrowserPollConnection {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = (params) => {\r\n            // Always add the token if we have one.\r\n            if (this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(() => {\r\n            this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            this.onClosed_();\r\n            this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(() => {\r\n            if (this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            this.scriptTagHolder = new FirebaseIFrameScriptHolder((...args) => {\r\n                const [command, arg1, arg2, arg3, arg4] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                if (!this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (this.connectTimeoutTimer_) {\r\n                    clearTimeout(this.connectTimeoutTimer_);\r\n                    this.connectTimeoutTimer_ = null;\r\n                }\r\n                this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    this.id = arg1;\r\n                    this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        this.myPacketOrderer.closeAfter(arg1, () => {\r\n                            this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, (...args) => {\r\n                const [pN, data] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                this.myPacketOrderer.handleResponse(pN, data);\r\n            }, () => {\r\n                this.onClosed_();\r\n            }, this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\r\n                    this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\r\n            }\r\n            if (this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\r\n            }\r\n            if (this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = this.applicationId;\r\n            }\r\n            if (this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            const connectURL = this.urlFn(urlParams);\r\n            this.log_('Connecting via long-poll to ' + connectURL);\r\n            this.scriptTagHolder.addTag(connectURL, () => {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    start() {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    }\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    static forceAllow() {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    }\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    static forceDisallow() {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    }\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    static isAvailable() {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    }\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    markConnectionHealthy() { }\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    }\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    send(data) {\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        const base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    }\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    addDisconnectPingFrame(id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        const urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    }\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    incrementIncomingBytes_(args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        const bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    }\r\n}\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nclass FirebaseIFrameScriptHolder {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    constructor(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\r\n                onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            let script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                const currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            const iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    static createIFrame_() {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                const a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                const domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    }\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    close() {\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\r\n            this.myIFrame.doc.body.textContent = '';\r\n            setTimeout(() => {\r\n                if (this.myIFrame !== null) {\r\n                    document.body.removeChild(this.myIFrame);\r\n                    this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        const onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    startLongPoll(id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    }\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    newRequest_() {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            let theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            let curDataString = '';\r\n            let i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                const nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    const theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    enqueueSegment(segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    }\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    addLongPollTag_(url, serial) {\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        const doNewRequest = () => {\r\n            this.outstandingRequests.delete(serial);\r\n            this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        const keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        const readyStateCB = () => {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    }\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    addTag(url, loadCB) {\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    const newScript = this.myIFrame.doc.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n                    newScript.async = true;\r\n                    newScript.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript.onload = newScript.onreadystatechange =\r\n                        function () {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            const rstate = newScript.readyState;\r\n                            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                newScript.onload = newScript.onreadystatechange = null;\r\n                                if (newScript.parentNode) {\r\n                                    newScript.parentNode.removeChild(newScript);\r\n                                }\r\n                                loadCB();\r\n                            }\r\n                        };\r\n                    newScript.onerror = () => {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        this.sendNewPolls = false;\r\n                        this.close();\r\n                    };\r\n                    this.myIFrame.doc.body.appendChild(newScript);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nlet WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nclass WebSocketConnection {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    static connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId) {\r\n        const urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        if (applicationId) {\r\n            urlParams[APPLICATION_ID_PARAM] = applicationId;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            let options;\r\n            if (isNodeSdk()) {\r\n                const device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                options = {\r\n                    headers: {\r\n                        'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = `Bearer ${this.authToken}`;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                const env = process['env'];\r\n                const proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n            }\r\n            this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = () => {\r\n            this.log_('Websocket connected.');\r\n            this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = () => {\r\n            this.log_('Websocket connection was disconnected.');\r\n            this.mySock = null;\r\n            this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = m => {\r\n            this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = e => {\r\n            this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n        };\r\n    }\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    start() { }\r\n    static forceDisallow() {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    }\r\n    static isAvailable() {\r\n        let isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    }\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    static previouslyFailed() {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    }\r\n    markConnectionHealthy() {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    }\r\n    appendFrame_(data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            const fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            const jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    }\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    handleNewFrameCount_(frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    }\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    extractFrameCount_(data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            const frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    }\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    handleIncomingFrame(mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        const data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            const remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    send(data) {\r\n        this.resetKeepAlive();\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    }\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    }\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    resetKeepAlive() {\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(() => {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (this.mySock) {\r\n                this.sendString_('0');\r\n            }\r\n            this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    }\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    sendString_(str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */\r\nWebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */\r\nWebSocketConnection.healthyTimeout = 30000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nclass TransportManager {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    constructor(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    static get ALL_TRANSPORTS() {\r\n        return [BrowserPollConnection, WebSocketConnection];\r\n    }\r\n    /**\r\n     * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\r\n     * TransportManager has already set up transports_\r\n     */\r\n    static get IS_TRANSPORT_INITIALIZED() {\r\n        return this.globalTransportInitialized_;\r\n    }\r\n    initTransports_(repoInfo) {\r\n        const isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        let isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            const transports = (this.transports_ = []);\r\n            for (const transport of TransportManager.ALL_TRANSPORTS) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports.push(transport);\r\n                }\r\n            }\r\n            TransportManager.globalTransportInitialized_ = true;\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    initialTransport() {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    upgradeTransport() {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Keeps track of whether the TransportManager has already chosen a transport to use\r\nTransportManager.globalTransportInitialized_ = false;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nconst UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nconst MESSAGE_TYPE = 't';\r\nconst MESSAGE_DATA = 'd';\r\nconst CONTROL_SHUTDOWN = 's';\r\nconst CONTROL_RESET = 'r';\r\nconst CONTROL_ERROR = 'e';\r\nconst CONTROL_PONG = 'o';\r\nconst SWITCH_ACK = 'a';\r\nconst END_TRANSMISSION = 'n';\r\nconst PING = 'p';\r\nconst SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nclass Connection {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    constructor(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* RealtimeState.CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    start_() {\r\n        const conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessageReceived = this.connReceiver_(this.conn_);\r\n        const onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(() => {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        const healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(() => {\r\n                this.healthyTimeout_ = null;\r\n                if (!this.isHealthy_) {\r\n                    if (this.conn_ &&\r\n                        this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        this.isHealthy_ = true;\r\n                        this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (this.conn_ &&\r\n                        this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        this.log_('Closing unhealthy connection after timeout.');\r\n                        this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    }\r\n    nextTransportId_() {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    }\r\n    disconnReceiver_(conn) {\r\n        return everConnected => {\r\n            if (conn === this.conn_) {\r\n                this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === this.secondaryConn_) {\r\n                this.log_('Secondary connection lost.');\r\n                this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                this.log_('closing an old connection');\r\n            }\r\n        };\r\n    }\r\n    connReceiver_(conn) {\r\n        return (message) => {\r\n            if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n                if (conn === this.rx_) {\r\n                    this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === this.secondaryConn_) {\r\n                    this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    sendRequest(dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        const msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    }\r\n    tryCleanupConnection() {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    }\r\n    onSecondaryControl_(controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            const cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    }\r\n    onSecondaryMessageReceived_(parsedData) {\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    }\r\n    upgradeIfSecondaryHealthy_() {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    proceedWithUpgrade_() {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    }\r\n    onPrimaryMessageReceived_(parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    }\r\n    onPrimaryResponse_() {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    }\r\n    onControl_(controlData) {\r\n        const cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            const payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                const handshakePayload = Object.assign({}, payload);\r\n                if (this.repoInfo_.isUsingEmulator) {\r\n                    // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\r\n                    handshakePayload.h = this.repoInfo_.host;\r\n                }\r\n                this.onHandshake_(handshakePayload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (let i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    onHandshake_(handshake) {\r\n        const timestamp = handshake.ts;\r\n        const version = handshake.v;\r\n        const host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    }\r\n    tryStartUpgrade_() {\r\n        const conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    }\r\n    startUpgrade_(conn) {\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessage = this.connReceiver_(this.secondaryConn_);\r\n        const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(() => {\r\n            if (this.secondaryConn_) {\r\n                this.log_('Timed out trying to upgrade.');\r\n                this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    }\r\n    onReset_(host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    }\r\n    onConnectionEstablished_(conn, timestamp) {\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* RealtimeState.CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(() => {\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    }\r\n    sendPingOnPrimaryIfNecessary_() {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    onSecondaryConnectionLost_() {\r\n        const conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    }\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    onConnectionLost_(everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    }\r\n    onConnectionShutdown_(reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    }\r\n    sendData_(data) {\r\n        if (this.state_ !== 1 /* RealtimeState.CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    }\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    close() {\r\n        if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* RealtimeState.DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    closeConnections_() {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nclass ServerActions {\r\n    put(pathString, data, onComplete, hash) { }\r\n    merge(pathString, data, onComplete, hash) { }\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    refreshAuthToken(token) { }\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    refreshAppCheckToken(token) { }\r\n    onDisconnectPut(pathString, data, onComplete) { }\r\n    onDisconnectMerge(pathString, data, onComplete) { }\r\n    onDisconnectCancel(pathString, onComplete) { }\r\n    reportStats(stats) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nclass EventEmitter {\r\n    constructor(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    trigger(eventType, ...varArgs) {\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            const listeners = [...this.listeners_[eventType]];\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    }\r\n    on(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback, context });\r\n        const eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        const listeners = this.listeners_[eventType] || [];\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    validateEventType_(eventType) {\r\n        assert(this.allowedEvents_.find(et => {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nclass OnlineMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['online']);\r\n        this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', () => {\r\n                if (!this.online_) {\r\n                    this.online_ = true;\r\n                    this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', () => {\r\n                if (this.online_) {\r\n                    this.online_ = false;\r\n                    this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new OnlineMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    }\r\n    currentlyOnline() {\r\n        return this.online_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nconst MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nconst MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nclass Path {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    constructor(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            let copyTo = 0;\r\n            for (let i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    toString() {\r\n        let pathString = '';\r\n        for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    }\r\n}\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    let pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    let pathString = '';\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin = 0) {\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        const childPieces = childPathObj.split('/');\r\n        for (let i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    const outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    const leftKeys = pathSlice(left, 0);\r\n    const rightKeys = pathSlice(right, 0);\r\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        const cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (let i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent of (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    let i = path.pieceNum_;\r\n    let j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nclass ValidationPath {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    constructor(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (let i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n}\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    const last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass VisibilityMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['visible']);\r\n        let hidden;\r\n        let visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, () => {\r\n                const visible = !document[hidden];\r\n                if (visible !== this.visible_) {\r\n                    this.visible_ = visible;\r\n                    this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new VisibilityMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECONNECT_MIN_DELAY = 1000;\r\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nconst INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nclass PersistentConnection extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.onConnectStatus_ = onConnectStatus_;\r\n        this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        this.log_ = logWrapper('p:' + this.id + ':');\r\n        this.interruptReasons_ = {};\r\n        this.listens = new Map();\r\n        this.outstandingPuts_ = [];\r\n        this.outstandingGets_ = [];\r\n        this.outstandingPutCount_ = 0;\r\n        this.outstandingGetCount_ = 0;\r\n        this.onDisconnectRequestQueue_ = [];\r\n        this.connected_ = false;\r\n        this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        this.securityDebugCallback_ = null;\r\n        this.lastSessionId = null;\r\n        this.establishConnectionTimer_ = null;\r\n        this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        this.requestCBHash_ = {};\r\n        this.requestNumber_ = 0;\r\n        this.realtime_ = null;\r\n        this.authToken_ = null;\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = false;\r\n        this.invalidAuthTokenCount_ = 0;\r\n        this.invalidAppCheckTokenCount_ = 0;\r\n        this.firstConnection_ = true;\r\n        this.lastConnectionAttemptTime_ = null;\r\n        this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', this.onOnline_, this);\r\n        }\r\n    }\r\n    sendRequest(action, body, onResponse) {\r\n        const curReqNum = ++this.requestNumber_;\r\n        const msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    }\r\n    get(query) {\r\n        this.initConnection_();\r\n        const deferred = new Deferred();\r\n        const request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        const outstandingGet = {\r\n            action: 'g',\r\n            request,\r\n            onComplete: (message) => {\r\n                const payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        const index = this.outstandingGets_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        const queryId = query._queryIdentifier;\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), `listen() called twice for same path/queryId.`);\r\n        const listenSpec = {\r\n            onComplete,\r\n            hashFn: currentHashFn,\r\n            query,\r\n            tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    }\r\n    sendGet_(index) {\r\n        const get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, (message) => {\r\n            delete this.outstandingGets_[index];\r\n            this.outstandingGetCount_--;\r\n            if (this.outstandingGetCount_ === 0) {\r\n                this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    }\r\n    sendListen_(listenSpec) {\r\n        const query = listenSpec.query;\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, (message) => {\r\n            const payload = message[ /*data*/'d'];\r\n            const status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            const currentListenSpec = this.listens.get(pathString) &&\r\n                this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static warnOnListenWarnings_(payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                const indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                const indexPath = query._path.toString();\r\n                warn(`Using an unspecified index. Your data will be downloaded and ` +\r\n                    `filtered on the client. Consider adding ${indexSpec} at ` +\r\n                    `${indexPath} to your security rules for better performance.`);\r\n            }\r\n        }\r\n    }\r\n    refreshAuthToken(token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, () => { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    }\r\n    reduceReconnectDelayIfAdminCredential_(credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        const isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    }\r\n    refreshAppCheckToken(token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, () => { });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    tryAuth() {\r\n        if (this.connected_ && this.authToken_) {\r\n            const token = this.authToken_;\r\n            const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\r\n            const requestData = { cred: token };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (this.authToken_ === token) {\r\n                    if (status === 'ok') {\r\n                        this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    tryAppCheck() {\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    unlisten(query, tag) {\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    }\r\n    sendUnlisten_(pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    }\r\n    onDisconnectPut(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'o',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectMerge(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'om',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectCancel(pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    sendOnDisconnect_(action, pathString, data, onComplete) {\r\n        const request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, (response) => {\r\n            if (onComplete) {\r\n                setTimeout(() => {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    }\r\n    put(pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    }\r\n    merge(pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    }\r\n    putInternal(action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        const request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action,\r\n            request,\r\n            onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        const index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    }\r\n    sendPut_(index) {\r\n        const action = this.outstandingPuts_[index].action;\r\n        const request = this.outstandingPuts_[index].request;\r\n        const onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, (message) => {\r\n            this.log_(action + ' response', message);\r\n            delete this.outstandingPuts_[index];\r\n            this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (this.outstandingPutCount_ === 0) {\r\n                this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    }\r\n    reportStats(stats) {\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            const request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, result => {\r\n                const status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    const errorReason = result[ /* data */'d'];\r\n                    this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            const reqNum = message['r'];\r\n            const onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    }\r\n    onDataPush_(action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    }\r\n    onReady_(timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    }\r\n    scheduleConnect_(timeout) {\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(() => {\r\n            this.establishConnectionTimer_ = null;\r\n            this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    }\r\n    initConnection_() {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    }\r\n    onVisible_(visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    }\r\n    onOnline_(online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    }\r\n    onRealtimeDisconnect_() {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                const timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            const timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            let reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    }\r\n    async establishConnection_() {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            const onDataMessage = this.onDataMessage_.bind(this);\r\n            const onReady = this.onReady_.bind(this);\r\n            const onDisconnect = this.onRealtimeDisconnect_.bind(this);\r\n            const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            const lastSessionId = this.lastSessionId;\r\n            let canceled = false;\r\n            let connection = null;\r\n            const closeFn = function () {\r\n                if (connection) {\r\n                    connection.close();\r\n                }\r\n                else {\r\n                    canceled = true;\r\n                    onDisconnect();\r\n                }\r\n            };\r\n            const sendRequestFn = function (msg) {\r\n                assert(connection, \"sendRequest call when we're not connected not allowed.\");\r\n                connection.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            const forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            try {\r\n                // First fetch auth and app check token, and establish connection after\r\n                // fetching the token was successful\r\n                const [authToken, appCheckToken] = await Promise.all([\r\n                    this.authTokenProvider_.getToken(forceRefresh),\r\n                    this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                ]);\r\n                if (!canceled) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    this.authToken_ = authToken && authToken.accessToken;\r\n                    this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                    connection = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect, \r\n                    /* onKill= */ reason => {\r\n                        warn(reason + ' (' + this.repoInfo_.toString() + ')');\r\n                        this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.log_('Failed to get token: ' + error);\r\n                if (!canceled) {\r\n                    if (this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    interrupt(reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    }\r\n    resume(reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    }\r\n    handleTimestamp_(timestamp) {\r\n        const delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    }\r\n    cancelSentTransactions_() {\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            const put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    }\r\n    onListenRevoked_(pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        let queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\r\n        }\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    }\r\n    removeListen_(pathString, queryId) {\r\n        const normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        let listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            const map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    }\r\n    onAuthRevoked_(statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onAppCheckRevoked_(statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onSecurityDebugPacket_(body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    }\r\n    restoreState_() {\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        for (const queries of this.listens.values()) {\r\n            for (const listenSpec of queries.values()) {\r\n                this.sendListen_(listenSpec);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            const request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (let i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    sendConnectStats_() {\r\n        const stats = {};\r\n        let clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    }\r\n    shouldReconnect_() {\r\n        const online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    }\r\n}\r\nPersistentConnection.nextPersistentConnectionId_ = 0;\r\n/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */\r\nPersistentConnection.nextConnectionId_ = 0;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass NamedNode {\r\n    constructor(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    static Wrap(name, node) {\r\n        return new NamedNode(name, node);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Index {\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    getCompare() {\r\n        return this.compare.bind(this);\r\n    }\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    indexedValueChanged(oldNode, newNode) {\r\n        const oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        const newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    }\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __EMPTY_NODE;\r\nclass KeyIndex extends Index {\r\n    static get __EMPTY_NODE() {\r\n        return __EMPTY_NODE;\r\n    }\r\n    static set __EMPTY_NODE(val) {\r\n        __EMPTY_NODE = val;\r\n    }\r\n    compare(a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    }\r\n    isDefinedOn(node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    }\r\n    makePost(indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.key';\r\n    }\r\n}\r\nconst KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nclass SortedMapIterator {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    constructor(node, startKey, comparator, isReverse_, resultGenerator_ = null) {\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        let cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNext() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        let node = this.nodeStack_.pop();\r\n        let result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    hasNext() {\r\n        return this.nodeStack_.length > 0;\r\n    }\r\n    peek() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        const node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nclass LLRBNode {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    constructor(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return this.left.count() + 1 + this.right.count();\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    }\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    min_() {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    minKey() {\r\n        return this.min_().key;\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    maxKey() {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    }\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        let n = this;\r\n        const cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    removeMin_() {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        let n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        let n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    isRed_() {\r\n        return this.color;\r\n    }\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    fixUp_() {\r\n        let n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    moveRedLeft_() {\r\n        let n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    moveRedRight_() {\r\n        let n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    rotateLeft_() {\r\n        const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    rotateRight_() {\r\n        const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    }\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    colorFlip_() {\r\n        const left = this.left.copy(null, null, !this.left.color, null, null);\r\n        const right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    }\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    checkMaxDepth_() {\r\n        const blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    }\r\n    check_() {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        const blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    }\r\n}\r\nLLRBNode.RED = true;\r\nLLRBNode.BLACK = false;\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nclass LLRBEmptyNode {\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        return this;\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    inorderTraversal(action) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return false;\r\n    }\r\n    minKey() {\r\n        return null;\r\n    }\r\n    maxKey() {\r\n        return null;\r\n    }\r\n    check_() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    isRed_() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nclass SortedMap {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    constructor(comparator_, root_ = SortedMap.EMPTY_NODE) {\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    insert(key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    remove(key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    get(key) {\r\n        let cmp;\r\n        let node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    getPredecessorKey(key) {\r\n        let cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    }\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    isEmpty() {\r\n        return this.root_.isEmpty();\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    count() {\r\n        return this.root_.count();\r\n    }\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    minKey() {\r\n        return this.root_.minKey();\r\n    }\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    maxKey() {\r\n        return this.root_.maxKey();\r\n    }\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return this.root_.inorderTraversal(action);\r\n    }\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return this.root_.reverseTraversal(action);\r\n    }\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    getIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    }\r\n    getIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    }\r\n    getReverseIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    }\r\n    getReverseIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    }\r\n}\r\n/**\r\n * Always use the same empty node, to reduce memory.\r\n */\r\nSortedMap.EMPTY_NODE = new LLRBEmptyNode();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nconst priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nconst validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        const val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nclass LeafNode {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    constructor(value_, priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    static set __childrenNodeConstructor(val) {\r\n        __childrenNodeConstructor = val;\r\n    }\r\n    static get __childrenNodeConstructor() {\r\n        return __childrenNodeConstructor;\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return true;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    hasChild() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode) {\r\n        return null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return 0;\r\n    }\r\n    /** @inheritDoc */\r\n    forEachChild(index, action) {\r\n        return false;\r\n    }\r\n    val(exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            const type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    getValue() {\r\n        return this.value_;\r\n    }\r\n    compareTo(other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    }\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    compareToLeafNode_(otherLeaf) {\r\n        const otherLeafType = typeof otherLeaf.value_;\r\n        const thisLeafType = typeof this.value_;\r\n        const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    }\r\n    withIndex() {\r\n        return this;\r\n    }\r\n    isIndexed() {\r\n        return true;\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            const otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */\r\nLeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet nodeFromJSON$1;\r\nlet MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nclass PriorityIndex extends Index {\r\n    compare(a, b) {\r\n        const aPriority = a.node.getPriority();\r\n        const bPriority = b.node.getPriority();\r\n        const indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getPriority().isEmpty();\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    }\r\n    makePost(indexValue, name) {\r\n        const priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.priority';\r\n    }\r\n}\r\nconst PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst LOG_2 = Math.log(2);\r\nclass Base12Num {\r\n    constructor(length) {\r\n        const logBase2 = (num) => \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parseInt((Math.log(num) / LOG_2), 10);\r\n        const bitMask = (bits) => parseInt(Array(bits + 1).join('1'), 2);\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        const mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    nextBitIsOne() {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        const result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nconst buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    const buildBalancedTree = function (low, high) {\r\n        const length = high - low;\r\n        let namedNode;\r\n        let key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const middle = parseInt((length / 2), 10) + low;\r\n            const left = buildBalancedTree(low, middle);\r\n            const right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    const buildFrom12Array = function (base12) {\r\n        let node = null;\r\n        let root = null;\r\n        let index = childList.length;\r\n        const buildPennant = function (chunkSize, color) {\r\n            const low = index - chunkSize;\r\n            const high = index;\r\n            index -= chunkSize;\r\n            const childTree = buildBalancedTree(low + 1, high);\r\n            const namedNode = childList[low];\r\n            const key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        const attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (let i = 0; i < base12.count; ++i) {\r\n            const isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            const chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    const base12 = new Base12Num(childList.length);\r\n    const root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet _defaultIndexMap;\r\nconst fallbackObject = {};\r\nclass IndexMap {\r\n    constructor(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\r\n    static get Default() {\r\n        assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n        _defaultIndexMap =\r\n            _defaultIndexMap ||\r\n                new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n        return _defaultIndexMap;\r\n    }\r\n    get(indexKey) {\r\n        const sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    }\r\n    hasIndex(indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    }\r\n    addIndex(indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        const childList = [];\r\n        let sawIndexedValue = false;\r\n        const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        let next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        let newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        const indexName = indexDefinition.toString();\r\n        const newIndexSet = Object.assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        const newIndexes = Object.assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    }\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    addToIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren, indexName) => {\r\n            const index = safeGet(this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    const childList = [];\r\n                    const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    let next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                let newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    removeFromIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren) => {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nlet EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nclass ChildrenNode {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    constructor(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    static get EMPTY_NODE() {\r\n        return (EMPTY_NODE ||\r\n            (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            const child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    }\r\n    /** @inheritDoc */\r\n    hasChild(childName) {\r\n        return this.children_.get(childName) !== null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            const namedNode = new NamedNode(childName, newChildNode);\r\n            let newChildren, newIndexMap;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            const newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            const newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return this.children_.isEmpty();\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return this.children_.count();\r\n    }\r\n    /** @inheritDoc */\r\n    val(exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        const obj = {};\r\n        let numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            const array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                const childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode, index) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            const predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    }\r\n    getFirstChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    }\r\n    getFirstChild(indexDefinition) {\r\n        const minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    getLastChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    }\r\n    getLastChild(indexDefinition) {\r\n        const maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    forEachChild(index, action) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(wrappedNode => {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    }\r\n    getIterator(indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    }\r\n    getIteratorFrom(startPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, key => key);\r\n        }\r\n        else {\r\n            const iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    getReverseIterator(indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    }\r\n    getReverseIteratorFrom(endPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, key => {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            const iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    compareTo(other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    }\r\n    withIndex(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    }\r\n    isIndexed(index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            const otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                const thisIter = this.getIterator(PRIORITY_INDEX);\r\n                const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                let thisCurrent = thisIter.getNext();\r\n                let otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    resolveIndex_(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    }\r\n}\r\nChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\nclass MaxNode extends ChildrenNode {\r\n    constructor() {\r\n        super(new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default);\r\n    }\r\n    compareTo(other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    equals(other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    }\r\n    getPriority() {\r\n        return this;\r\n    }\r\n    getImmediateChild(childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nconst MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority = null) {\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        const jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        const children = [];\r\n        let childrenHavePriority = false;\r\n        const hinzeJsonObj = json;\r\n        each(hinzeJsonObj, (key, child) => {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                const childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority =\r\n                        childrenHavePriority || !childNode.getPriority().isEmpty();\r\n                    children.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        const childSet = buildChildSet(children, NAME_ONLY_COMPARATOR, namedNode => namedNode.name, NAME_COMPARATOR);\r\n        if (childrenHavePriority) {\r\n            const sortedChildSet = buildChildSet(children, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        let node = ChildrenNode.EMPTY_NODE;\r\n        each(json, (key, childData) => {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    const childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node = node.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PathIndex extends Index {\r\n    constructor(indexPath_) {\r\n        super();\r\n        this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n    }\r\n    extractChild(snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    }\r\n    compare(a, b) {\r\n        const aChild = this.extractChild(a.node);\r\n        const bChild = this.extractChild(b.node);\r\n        const indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    }\r\n    maxPost() {\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    }\r\n    toString() {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ValueIndex extends Index {\r\n    compare(a, b) {\r\n        const indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return true;\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.value';\r\n    }\r\n}\r\nconst VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* ChangeType.VALUE */, snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* ChangeType.CHILD_ADDED */, snapshotNode, childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* ChangeType.CHILD_REMOVED */, snapshotNode, childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* ChangeType.CHILD_CHANGED */,\r\n        snapshotNode,\r\n        childName,\r\n        oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* ChangeType.CHILD_MOVED */, snapshotNode, childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nclass IndexedFilter {\r\n    constructor(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        const oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        const oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    }\r\n    filtersNodes() {\r\n        return false;\r\n    }\r\n    getIndexedFilter() {\r\n        return this;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nclass RangedFilter {\r\n    constructor(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    getStartPost() {\r\n        return this.startPost_;\r\n    }\r\n    getEndPost() {\r\n        return this.endPost_;\r\n    }\r\n    matches(node) {\r\n        const isWithinStart = this.startIsInclusive_\r\n            ? this.index_.compare(this.getStartPost(), node) <= 0\r\n            : this.index_.compare(this.getStartPost(), node) < 0;\r\n        const isWithinEnd = this.endIsInclusive_\r\n            ? this.index_.compare(node, this.getEndPost()) <= 0\r\n            : this.index_.compare(node, this.getEndPost()) < 0;\r\n        return isWithinStart && isWithinEnd;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        let filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        const self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.indexedFilter_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    static getStartPost_(params) {\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    }\r\n    static getEndPost_(params) {\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nclass LimitedFilter {\r\n    constructor(params) {\r\n        this.withinDirectionalStart = (node) => this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\r\n        this.withinDirectionalEnd = (node) => this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\r\n        this.withinStartPost = (node) => {\r\n            const compareRes = this.index_.compare(this.rangedFilter_.getStartPost(), node);\r\n            return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.withinEndPost = (node) => {\r\n            const compareRes = this.index_.compare(node, this.rangedFilter_.getEndPost());\r\n            return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        let filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    const next = iterator.getNext();\r\n                    if (!this.withinDirectionalStart(next)) {\r\n                        // if we have not reached the start, skip to the next element\r\n                        continue;\r\n                    }\r\n                    else if (!this.withinDirectionalEnd(next)) {\r\n                        // if we have reached the end, stop adding elements\r\n                        break;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext()) {\r\n                    const next = iterator.getNext();\r\n                    const inRange = count < this.limit_ &&\r\n                        this.withinDirectionalStart(next) &&\r\n                        this.withinDirectionalEnd(next);\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    fullLimitUpdateChild_(snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        let cmp;\r\n        if (this.reverse_) {\r\n            const indexCmp = this.index_.getCompare();\r\n            cmp = (a, b) => indexCmp(b, a);\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        const oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        const newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        const windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        const inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            const oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            let nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            const compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            const remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                const newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                const nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */\r\nclass QueryParams {\r\n    constructor() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false; // can only be true if startSet_ is true\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false; // can only be true if endSet_ is true\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    hasStart() {\r\n        return this.startSet_;\r\n    }\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    isViewFromLeft() {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n        }\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    getIndexStartValue() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    getIndexStartName() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    }\r\n    hasEnd() {\r\n        return this.endSet_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    getIndexEndValue() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    getIndexEndName() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    }\r\n    hasLimit() {\r\n        return this.limitSet_;\r\n    }\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    hasAnchoredLimit() {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    }\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    getLimit() {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    loadsAllData() {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    }\r\n    isDefault() {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    }\r\n    copy() {\r\n        const copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.startAfterSet_ = this.startAfterSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.endBeforeSet_ = this.endBeforeSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    }\r\n}\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    const newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    const qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    let orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* REST_QUERY_CONSTANTS.PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* REST_QUERY_CONSTANTS.VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* REST_QUERY_CONSTANTS.KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* REST_QUERY_CONSTANTS.ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        const startParam = queryParams.startAfterSet_\r\n            ? \"startAfter\" /* REST_QUERY_CONSTANTS.START_AFTER */\r\n            : \"startAt\" /* REST_QUERY_CONSTANTS.START_AT */;\r\n        qs[startParam] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[startParam] += ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        const endParam = queryParams.endBeforeSet_\r\n            ? \"endBefore\" /* REST_QUERY_CONSTANTS.END_BEFORE */\r\n            : \"endAt\" /* REST_QUERY_CONSTANTS.END_AT */;\r\n        qs[endParam] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[endParam] += ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* REST_QUERY_CONSTANTS.LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* REST_QUERY_CONSTANTS.LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    const obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n        obj[\"sin\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE */] =\r\n            !queryParams.startAfterSet_;\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n        obj[\"ein\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE */] =\r\n            !queryParams.endBeforeSet_;\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* WIRE_PROTOCOL_CONSTANTS.LIMIT */] = queryParams.limit_;\r\n        let viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* WIRE_PROTOCOL_CONSTANTS.INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nclass ReadonlyRestClient extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        this.listens_ = {};\r\n    }\r\n    reportStats(stats) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    static getListenId_(query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        const thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(this.listens_, listenId) === thisListen) {\r\n                let status;\r\n                if (!error) {\r\n                    status = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status = 'permission_denied';\r\n                }\r\n                else {\r\n                    status = 'rest_error:' + error;\r\n                }\r\n                onComplete(status, null);\r\n            }\r\n        });\r\n    }\r\n    /** @inheritDoc */\r\n    unlisten(query, tag) {\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    }\r\n    get(query) {\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        const pathString = query._path.toString();\r\n        const deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n    /** @inheritDoc */\r\n    refreshAuthToken(token) {\r\n        // no-op since we just always call getToken.\r\n    }\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    restRequest_(pathString, queryStringParameters = {}, callback) {\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            const url = (this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            this.log_('Sending REST request for ' + url);\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (callback && xhr.readyState === 4) {\r\n                    this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    let res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nclass SnapshotHolder {\r\n    constructor() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    getNode(path) {\r\n        return this.rootNode_.getChild(path);\r\n    }\r\n    updateSnapshot(path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        const child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                const value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, (key, tree) => {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            const childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                const safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\r\n            const path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach((tree, key) => {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nclass StatsListener {\r\n    constructor(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    get() {\r\n        const newStats = this.collection_.get();\r\n        const delta = Object.assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, (stat, value) => {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\r\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nclass StatsReporter {\r\n    constructor(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        const timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    reportStats_() {\r\n        const stats = this.statsListener_.get();\r\n        const reportedStats = {};\r\n        let haveStatsToReport = false;\r\n        each(stats, (stat, value) => {\r\n            if (value > 0 && contains(this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AckUserWrite {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    constructor(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    operationForChild(childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            const childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ListenComplete {\r\n    constructor(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Overwrite {\r\n    constructor(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Merge {\r\n    constructor(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            const childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    }\r\n    toString() {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nclass CacheNode {\r\n    constructor(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    isFullyInitialized() {\r\n        return this.fullyInitialized_;\r\n    }\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    isFiltered() {\r\n        return this.filtered_;\r\n    }\r\n    isCompleteForPath(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        const childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    }\r\n    isCompleteForChild(key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    }\r\n    getNode() {\r\n        return this.node_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nclass EventGenerator {\r\n    constructor(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n}\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    const events = [];\r\n    const moves = [];\r\n    changes.forEach(change => {\r\n        if (change.type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* ChangeType.CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* ChangeType.CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* ChangeType.CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* ChangeType.CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* ChangeType.VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    const filteredChanges = changes.filter(change => change.type === eventType);\r\n    filteredChanges.sort((a, b) => eventGeneratorCompareChanges(eventGenerator, a, b));\r\n    filteredChanges.forEach(change => {\r\n        const materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(registration => {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache, serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nconst EmptyChildren = () => {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nclass ImmutableTree {\r\n    constructor(value, children = EmptyChildren()) {\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    static fromObject(obj) {\r\n        let tree = new ImmutableTree(null);\r\n        each(obj, (childPath, childSnap) => {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    }\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    isEmpty() {\r\n        return this.value === null && this.children.isEmpty();\r\n    }\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    findRootMostMatchingPathAndValue(relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(relativePath);\r\n                const child = this.children.get(front);\r\n                if (child !== null) {\r\n                    const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        const fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    findRootMostValueAndPath(relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, () => true);\r\n    }\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    subtree(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    set(relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.set(pathPopFront(relativePath), toSet);\r\n            const newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    remove(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                const newChild = child.remove(pathPopFront(relativePath));\r\n                let newChildren;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    get(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    setTree(relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            let newChildren;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    fold(fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    }\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    fold_(pathSoFar, fn) {\r\n        const accum = {};\r\n        this.children.inorderTraversal((childKey, childTree) => {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    }\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    findOnPath(path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    findOnPath_(pathToFollow, pathSoFar, f) {\r\n        const result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(pathToFollow);\r\n                const nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    foreachOnPath(path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    foreachOnPath_(pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            const front = pathGetFront(pathToFollow);\r\n            const nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    foreach(f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    }\r\n    foreach_(currentRelativePath, f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    }\r\n    foreachChild(f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nclass CompoundWrite {\r\n    constructor(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    static empty() {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    }\r\n}\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            const rootMostPath = rootmost.path;\r\n            let value = rootmost.value;\r\n            const relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            const subtree = new ImmutableTree(node);\r\n            const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    let newWrite = compoundWrite;\r\n    each(updates, (childKey, node) => {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        const newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    const children = [];\r\n    const node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        let priorityWrite = null;\r\n        writeTree.children.inorderTraversal((childKey, childTree) => {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path,\r\n        snap,\r\n        writeId,\r\n        visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path,\r\n        children: changedChildren,\r\n        writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (let i = 0; i < writeTree.allWrites.length; i++) {\r\n        const record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    const idx = writeTree.allWrites.findIndex(s => {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    const writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    let removedWriteWasVisible = writeToRemove.visible;\r\n    let removedWriteOverlapsWithOtherWrites = false;\r\n    let i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        const currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            const children = writeToRemove.children;\r\n            each(children, (childName) => {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (const childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    let compoundWrite = CompoundWrite.empty();\r\n    for (let i = 0; i < writes.length; ++i) {\r\n        const write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            const writePath = write.path;\r\n            let relativePath;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        const child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            const deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            const subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                const filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                const mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    let completeChildren = ChildrenNode.EMPTY_NODE;\r\n    const topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const node = compoundWriteApply(compoundWriteChildCompoundWrite(merge, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    const path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    const path = pathChild(treePath, childKey);\r\n    const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    let toIterate;\r\n    const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        const nodes = [];\r\n        const cmp = index.getCompare();\r\n        const iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        let next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ChildChangeAccumulator {\r\n    constructor() {\r\n        this.changeMap = new Map();\r\n    }\r\n    trackChildChange(change) {\r\n        const type = change.type;\r\n        const childKey = change.childName;\r\n        assert(type === \"child_added\" /* ChangeType.CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* ChangeType.CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        const oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            const oldType = oldChange.type;\r\n            if (type === \"child_added\" /* ChangeType.CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* ChangeType.CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changeMap.values());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nclass NoCompleteChildSource_ {\r\n    getCompleteChild(childKey) {\r\n        return null;\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nconst NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nclass WriteTreeCompleteChildSource {\r\n    constructor(writes_, viewCache_, optCompleteServerCache_ = null) {\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    getCompleteChild(childKey) {\r\n        const node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            const serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        const completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        const nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    const accumulator = new ChildChangeAccumulator();\r\n    let newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        const overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        const merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        const ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    const changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    const eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        const isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    const oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        let newEventCache, serverNode;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                const serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                const completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                const completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                const completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                const oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                const childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                let newEventChild;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    const oldServerSnap = oldViewCache.serverCache;\r\n    let newServerCache;\r\n    const serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        const newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        const childChangePath = pathPopFront(changePath);\r\n        const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        const newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    const newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    const source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    const oldEventSnap = oldViewCache.eventCache;\r\n    let newViewCache, newEventCache;\r\n    const source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            const childChangePath = pathPopFront(changePath);\r\n            const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            let newChild;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                const childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                const newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach((relativePath, childNode) => {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    let viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    const serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\r\n        if (serverNode.hasChild(childKey)) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\r\n        const isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === null;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    const filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    const serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            let changedChildren = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\r\n                changedChildren = changedChildren.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        let changedChildren = new ImmutableTree(null);\r\n        affectedTree.foreach((mergePath, value) => {\r\n            const serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren = changedChildren.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    const oldServerNode = viewCache.serverCache;\r\n    const newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    let complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        const source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        const oldEventCache = viewCache.eventCache.getNode();\r\n        let newEventCache;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            let newNode;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                const serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(path);\r\n            let newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nclass View {\r\n    constructor(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        const params = this.query_._queryParams;\r\n        const indexFilter = new IndexedFilter(params.getIndex());\r\n        const filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        const initialServerCache = initialViewCache.serverCache;\r\n        const initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        const serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        const eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        const newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        const newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    get query() {\r\n        return this.query_;\r\n    }\r\n}\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    const cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        const path = view.query._path;\r\n        view.eventRegistrations_.forEach(registration => {\r\n            const maybeEvent = registration.createCancelEvent(cancelError, path);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        let remaining = [];\r\n        for (let i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            const existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    const oldViewCache = view.viewCache_;\r\n    const result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    const eventSnap = view.viewCache_.eventCache;\r\n    const initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        const eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    const registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nclass SyncPoint {\r\n    constructor() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n}\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    const queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        const view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        let events = [];\r\n        for (const view of syncPoint.views.values()) {\r\n            events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    const queryId = query._queryIdentifier;\r\n    const view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        let eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        let eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        const viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    const queryId = query._queryIdentifier;\r\n    const removed = [];\r\n    let cancelEvents = [];\r\n    const hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        // When you do ref.off(...), we search all views for the registration to remove.\r\n        for (const [viewQueryId, view] of syncPoint.views.entries()) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(viewQueryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        const view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    const result = [];\r\n    for (const view of syncPoint.views.values()) {\r\n        if (!view.query._queryParams.loadsAllData()) {\r\n            result.push(view);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    let serverCache = null;\r\n    for (const view of syncPoint.views.values()) {\r\n        serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    const params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        const queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    for (const view of syncPoint.views.values()) {\r\n        if (view.query._queryParams.loadsAllData()) {\r\n            return view;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nlet syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nclass SyncTree {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    constructor(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n}\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert = false) {\r\n    const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    const needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        let affectedTree = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree = affectedTree.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, (pathString) => {\r\n                affectedTree = affectedTree.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\r\n *  deduping needs to take place. This flag allows toggling of that behavior\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError, skipListenerDedup = false) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    const path = query._path;\r\n    const maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    let cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        const removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        const removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        if (!skipListenerDedup) {\r\n            /**\r\n             * We may have just removed one of many listeners and can short-circuit this whole process\r\n             * We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n             * properly set up.\r\n             */\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            const removingDefault = -1 !==\r\n                removed.findIndex(query => {\r\n                    return query._queryParams.loadsAllData();\r\n                });\r\n            const covered = syncTree.syncPointTree_.findOnPath(path, (relativePath, parentSyncPoint) => syncPointHasCompleteView(parentSyncPoint));\r\n            if (removingDefault && !covered) {\r\n                const subtree = syncTree.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (let i = 0; i < newViews.length; ++i) {\r\n                        const view = newViews[i], newQuery = view.query;\r\n                        const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                        syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                // Otherwise there's nothing below us, so nothing we need to start listening on\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    const defaultTag = null;\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach((queryToRemove) => {\r\n                        const tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const changeTree = ImmutableTree.fromObject(changedChildren);\r\n        const op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration, skipSetupListener = false) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    let foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        const subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild((childName, childSyncPoint) => {\r\n            const completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        const queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        const tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    let events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\r\n        const view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    const includeHiddenSets = true;\r\n    const writeTree = syncTree.pendingWriteTree_;\r\n    const serverCache = syncTree.syncPointTree_.findOnPath(path, (pathSoFar, syncPoint) => {\r\n        const relativePath = newRelativePath(pathSoFar, path);\r\n        const serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    const serverCacheComplete = serverCache != null;\r\n    const serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        const syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        let events = [];\r\n        const childName = pathGetFront(operation.path);\r\n        const childOperation = operation.operationForChild(childName);\r\n        const childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            const childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    const syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let events = [];\r\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\r\n        const childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        const childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    const query = view.query;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    return {\r\n        hashFn: () => {\r\n            const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: (status) => {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                const error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery(syncTree, query) {\r\n    const queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    const splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    const syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            let views = [];\r\n            if (maybeChildSyncPoint) {\r\n                views = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, (_key, childViews) => {\r\n                views = views.concat(childViews);\r\n            });\r\n            return views;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (let j = 0; j < queries.length; ++j) {\r\n        const removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    const path = query._path;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    const events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    const subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        const queriesToStop = subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                let queries = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries = queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(view => view.query));\r\n                }\r\n                each(childMap, (_key, childQueries) => {\r\n                    queries = queries.concat(childQueries);\r\n                });\r\n                return queries;\r\n            }\r\n        });\r\n        for (let i = 0; i < queriesToStop.length; ++i) {\r\n            const queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ExistingValueProvider {\r\n    constructor(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    }\r\n    node() {\r\n        return this.node_;\r\n    }\r\n}\r\nclass DeferredValueProvider {\r\n    constructor(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    }\r\n    node() {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    }\r\n}\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nconst generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nconst resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nconst resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nconst resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    const delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    const existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    const leaf = existingNode;\r\n    const existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nconst resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nconst resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    const rawPri = node.getPriority().val();\r\n    const priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    let newNode;\r\n    if (node.isLeafNode()) {\r\n        const leafNode = node;\r\n        const value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        const childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nclass Tree {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    constructor(name = '', parent = null, node = { children: {}, childCount: 0 }) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n}\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    let child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        const childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, (child, childTree) => {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, child => {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    let node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    const childEmpty = treeIsEmpty(child);\r\n    const childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nconst INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nconst INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nconst MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nconst isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nconst isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nconst isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nconst isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nconst validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nconst validateFirebaseData = function (errorPrefix, data, path_) {\r\n    const path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        let hasDotValue = false;\r\n        let hasActualChild = false;\r\n        each(data, (key, value) => {\r\n            if (key === '.value') {\r\n                hasDotValue = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue && hasActualChild) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nconst validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    let i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        const keys = pathSlice(curPath);\r\n        for (let j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    let prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nconst validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    const errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    const mergePaths = [];\r\n    each(data, (key, value) => {\r\n        const curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nconst validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nconst validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nconst validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nconst validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    const pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nclass EventQueue {\r\n    constructor() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n}\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    let currList = null;\r\n    for (let i = 0; i < eventDataList.length; i++) {\r\n        const data = eventDataList[i];\r\n        const path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathEquals(eventPath, path));\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathContains(eventPath, changedPath) ||\r\n        pathContains(changedPath, eventPath));\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    let sentAll = true;\r\n    for (let i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        const eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            const eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (let i = 0; i < eventList.events.length; i++) {\r\n        const eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            const eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nconst MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nclass Repo {\r\n    constructor(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    toString() {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    }\r\n}\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, (connectStatus) => {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, (updates) => {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(token => {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(result => {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, () => new StatsReporter(repo.stats_, repo.server_));\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            let infoEvents = [];\r\n            const node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(() => {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: () => { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            repo.server_.listen(query, currentHashFn, tag, (status, data) => {\r\n                const events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: (query, tag) => {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    const offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    const path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    let events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            const taggedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            const taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        const changedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        const snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    let affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, (key, value) => {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    const path = new Path('/.info/' + pathString);\r\n    const newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    const events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will wait until the\r\n *  repo has established a connection and then request the value for `query`.\r\n * If the client is not able to retrieve the query result for another reason,\r\n * it reports an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query, eventRegistration) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(payload => {\r\n        const node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        /**\r\n         * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\r\n         * Add an event registration,\r\n         * Update data at the path,\r\n         * Raise any events,\r\n         * Cleanup the SyncTree\r\n         */\r\n        syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration, true);\r\n        let events;\r\n        if (query._queryParams.loadsAllData()) {\r\n            events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        }\r\n        else {\r\n            const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, query._path, node, tag);\r\n        }\r\n        /*\r\n         * We need to raise events in the scenario where `get()` is called at a parent path, and\r\n         * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\r\n         * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\r\n         * and its corresponding serverCache, including the child location where `onValue` is called. Then,\r\n         * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\r\n         * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\r\n         * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\r\n         * ensure the corresponding child events will get fired.\r\n         */\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n        syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration, null, true);\r\n        return node;\r\n    }, err => {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    const writeId = repoGetNextWriteId(repo);\r\n    const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), (status, errorReason) => {\r\n        const success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    const affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    let empty = true;\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const changedChildren = {};\r\n    each(childrenToMerge, (changedKey, changedValue) => {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        const writeId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n            const success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n            const affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, (changedPath) => {\r\n            const affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), (path, node) => {\r\n        const resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    let events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), (path, snap) => {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        const affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    const newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    const newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, (childName, childNode) => {\r\n                const newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoLog(repo, ...varArgs) {\r\n    let prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log(prefix, ...varArgs);\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(() => {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                const code = (status || 'error').toUpperCase();\r\n                let message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                const error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    const transaction = {\r\n        path,\r\n        update: transactionUpdate,\r\n        onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    const currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    const newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* TransactionStatus.RUN */;\r\n        const queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        const nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        let priorityForNode;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            const currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        const serverValues = repoGenerateServerValues(repo);\r\n        const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node = repo.transactionQueueTree_) {\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        const queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        const allRun = queue.every((transaction) => transaction.status === 0 /* TransactionStatus.RUN */);\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, childNode => {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    const setsToIgnore = queue.map(txn => {\r\n        return txn.currentWriteId;\r\n    });\r\n    const latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    let snapToSend = latestState;\r\n    const latestHash = latestState.hash();\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const txn = queue[i];\r\n        assert(txn.status === 0 /* TransactionStatus.RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* TransactionStatus.SENT */;\r\n        txn.retryCount++;\r\n        const relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    const dataToSend = snapToSend.val(true);\r\n    const pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, (status) => {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status\r\n        });\r\n        let events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            const callbacks = [];\r\n            for (let i = 0; i < queue.length; i++) {\r\n                queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(() => queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (let i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* TransactionStatus.RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    const rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    const path = treeGetPath(rootMostTransactionNode);\r\n    const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    const callbacks = [];\r\n    let events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    const txnsToRerun = queue.filter(q => {\r\n        return q.status === 0 /* TransactionStatus.RUN */;\r\n    });\r\n    const setsToIgnore = txnsToRerun.map(q => {\r\n        return q.currentWriteId;\r\n    });\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const transaction = queue[i];\r\n        const relativePath = newRelativePath(path, transaction.path);\r\n        let abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* TransactionStatus.NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* TransactionStatus.RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                const currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                const newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    let newDataNode = nodeFromJSON(newData);\r\n                    const hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    const oldWriteId = transaction.currentWriteId;\r\n                    const serverValues = repoGenerateServerValues(repo);\r\n                    const newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(() => queue[i].onComplete(null, false, queue[i].currentInputSnapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(() => queue[i].onComplete(new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    let front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    let transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    const transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort((a, b) => a.order - b.order);\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    const nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (let i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, child => {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        let to = 0;\r\n        for (let from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* TransactionStatus.COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, childNode => {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        const callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        let events = [];\r\n        let lastSent = -1;\r\n        for (let i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* TransactionStatus.SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* TransactionStatus.SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* TransactionStatus.RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    let pathStringDecoded = '';\r\n    const pieces = pathString.split('/');\r\n    for (let i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            let piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    const results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (const segment of queryString.split('&')) {\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        const kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(`Invalid query segment '${segment}' in query '${queryString}'`);\r\n        }\r\n    }\r\n    return results;\r\n}\r\nconst parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    const parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, nodeAdmin, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nconst parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    let host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    let secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        let colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        let slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        let questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        const queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        const hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            const dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host,\r\n        port,\r\n        domain,\r\n        subdomain,\r\n        secure,\r\n        scheme,\r\n        pathString,\r\n        namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nconst PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nconst nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    let lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    const lastRandChars = [];\r\n    return function (now) {\r\n        const duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        let i;\r\n        const timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        let id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nclass DataEvent {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    constructor(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    getPath() {\r\n        const ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    }\r\n    getEventType() {\r\n        return this.eventType;\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    }\r\n}\r\nclass CancelEvent {\r\n    constructor(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    getPath() {\r\n        return this.path;\r\n    }\r\n    getEventType() {\r\n        return 'cancel';\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return this.path.toString() + ':cancel';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nclass CallbackContext {\r\n    constructor(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    onValue(expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    }\r\n    onCancel(error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    }\r\n    get hasCancelCallback() {\r\n        return !!this.cancelCallback;\r\n    }\r\n    matches(other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nclass OnDisconnect {\r\n    /** @hideconstructor */\r\n    constructor(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    cancel() {\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    remove() {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    set(value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    setWithPriority(value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    update(values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nclass QueryImpl {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    constructor(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    get key() {\r\n        if (pathIsEmpty(this._path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this._path);\r\n        }\r\n    }\r\n    get ref() {\r\n        return new ReferenceImpl(this._repo, this._path);\r\n    }\r\n    get _queryIdentifier() {\r\n        const obj = queryParamsGetQueryObject(this._queryParams);\r\n        const id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    }\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    get _queryObject() {\r\n        return queryParamsGetQueryObject(this._queryParams);\r\n    }\r\n    isEqual(other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        const sameRepo = this._repo === other._repo;\r\n        const samePath = pathEquals(this._path, other._path);\r\n        const sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    }\r\n    toJSON() {\r\n        return this.toString();\r\n    }\r\n    toString() {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    }\r\n}\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    let startNode = null;\r\n    let endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        const tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        const wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass ReferenceImpl extends QueryImpl {\r\n    /** @hideconstructor */\r\n    constructor(repo, path) {\r\n        super(repo, path, new QueryParams(), false);\r\n    }\r\n    get parent() {\r\n        const parentPath = pathParent(this._path);\r\n        return parentPath === null\r\n            ? null\r\n            : new ReferenceImpl(this._repo, parentPath);\r\n    }\r\n    get root() {\r\n        let ref = this;\r\n        while (ref.parent !== null) {\r\n            ref = ref.parent;\r\n        }\r\n        return ref;\r\n    }\r\n}\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nclass DataSnapshot {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    constructor(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\r\n    get priority() {\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this._node.getPriority().val();\r\n    }\r\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\r\n    get key() {\r\n        return this.ref.key;\r\n    }\r\n    /** Returns the number of child properties of this `DataSnapshot`. */\r\n    get size() {\r\n        return this._node.numChildren();\r\n    }\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    child(path) {\r\n        const childPath = new Path(path);\r\n        const childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    }\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    exists() {\r\n        return !this._node.isEmpty();\r\n    }\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    exportVal() {\r\n        return this._node.val(true);\r\n    }\r\n    /**\r\n     * Enumerates the top-level children in the `IteratedDataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    forEach(action) {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        const childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, (key, node) => {\r\n            return action(new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    }\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    hasChild(path) {\r\n        const childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    }\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    hasChildren() {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return this.exportVal();\r\n    }\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    val() {\r\n        return this._node.val();\r\n    }\r\n}\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    const repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */\r\nfunction onDisconnect(ref) {\r\n    ref = getModularInstance(ref);\r\n    return new OnDisconnect(ref._repo, ref._path);\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\r\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    const now = repoServerTime(parent._repo);\r\n    const name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    const thennablePushRef = child(parent, name);\r\n    const pushRef = child(parent, name);\r\n    let promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(() => pushRef);\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thennablePushRef.then = promise.then.bind(promise);\r\n    thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thennablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    const callbackContext = new CallbackContext(() => { });\r\n    const container = new ValueEventRegistration(callbackContext);\r\n    return repoGetValue(query._repo, query, container).then(node => {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nclass ValueEventRegistration {\r\n    constructor(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        return eventType === 'value';\r\n    }\r\n    createEvent(change, query) {\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, null);\r\n        }\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    }\r\n    hasAnyCallback() {\r\n        return this.callbackContext !== null;\r\n    }\r\n}\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nclass ChildEventRegistration {\r\n    constructor(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        let eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    createEvent(change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        const childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    }\r\n    hasAnyCallback() {\r\n        return !!this.callbackContext;\r\n    }\r\n}\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    let cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        const userCallback = callback;\r\n        const onceCallback = (dataSnapshot, previousChildName) => {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    const callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    const container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\r\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\r\n * the respective `on*` callbacks.\r\n *\r\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    let container = null;\r\n    const expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nclass QueryConstraint {\r\n}\r\nclass QueryEndAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'endAt';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        const newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nclass QueryEndBeforeConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'endBefore';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        const newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value less than or equal\r\n * to the specified value and a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nclass QueryStartAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'startAt';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        const newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value = null, key) {\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nclass QueryStartAfterConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'startAfter';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        const newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nclass QueryLimitToFirstConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n        this.type = 'limitToFirst';\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nclass QueryLimitToLastConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n        this.type = 'limitToLast';\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nclass QueryOrderByChildConstraint extends QueryConstraint {\r\n    constructor(_path) {\r\n        super();\r\n        this._path = _path;\r\n        this.type = 'orderByChild';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        const parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        const index = new PathIndex(parsedPath);\r\n        const newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nclass QueryOrderByKeyConstraint extends QueryConstraint {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = 'orderByKey';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = 'orderByPriority';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nclass QueryOrderByValueConstraint extends QueryConstraint {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = 'orderByValue';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nclass QueryEqualToValueConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'equalTo';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query, ...queryConstraints) {\r\n    let queryImpl = getModularInstance(query);\r\n    for (const constraint of queryConstraints) {\r\n        queryImpl = constraint._apply(queryImpl);\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches `Repo` instances.\r\n */\r\nconst repos = {};\r\n/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */\r\nlet useRestClient = false;\r\n/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(`${host}:${port}`, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams, \r\n    /*isUsingEmulator=*/ true);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    let dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\r\n    }\r\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    let repoInfo = parsedUrl.repoInfo;\r\n    let isEmulator;\r\n    let dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined' && process.env) {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    const authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    const repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    const appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    let appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    let repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nclass Database {\r\n    /** @hideconstructor */\r\n    constructor(_repoInternal, \r\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a `Database` instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    get _repo() {\r\n        if (!this._instanceStarted) {\r\n            repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n            this._instanceStarted = true;\r\n        }\r\n        return this._repoInternal;\r\n    }\r\n    get _root() {\r\n        if (!this._rootInternal) {\r\n            this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n        }\r\n        return this._rootInternal;\r\n    }\r\n    _delete() {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _checkNotDeleted(apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    }\r\n}\r\nfunction checkTransportInit() {\r\n    if (TransportManager.IS_TRANSPORT_INITIALIZED) {\r\n        warn('Transport has already been initialized. Please call this function before calling ref or setting up a listener');\r\n    }\r\n}\r\n/**\r\n * Force the use of websockets instead of longPolling.\r\n */\r\nfunction forceWebSockets() {\r\n    checkTransportInit();\r\n    BrowserPollConnection.forceDisallow();\r\n}\r\n/**\r\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\r\n */\r\nfunction forceLongPolling() {\r\n    checkTransportInit();\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n}\r\n/**\r\n * Returns the instance of the Realtime Database SDK that is associated\r\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\r\n * with default settings if no instance exists or if the existing instance uses\r\n * a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */\r\nfunction getDatabase(app = getApp(), url) {\r\n    const db = _getProvider(app, 'database').getImmediate({\r\n        identifier: url\r\n    });\r\n    if (!db._instanceStarted) {\r\n        const emulator = getDefaultEmulatorHostnameAndPort('database');\r\n        if (emulator) {\r\n            connectDatabaseEmulator(db, ...emulator);\r\n        }\r\n    }\r\n    return db;\r\n}\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options = {}) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    const repo = db._repoInternal;\r\n    let tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        const token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging(logger, persistent) {\r\n    enableLogging$1(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerDatabase(variant) {\r\n    setSDKVersion(SDK_VERSION$1);\r\n    _registerComponent(new Component('database', (container, { instanceIdentifier: url }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const authProvider = container.getProvider('auth-internal');\r\n        const appCheckProvider = container.getProvider('app-check-internal');\r\n        return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\r\n    registerVersion(name, version, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */\r\nclass TransactionResult {\r\n    /** @hideconstructor */\r\n    constructor(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    toJSON() {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    const applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    const deferred = new Deferred();\r\n    const promiseComplete = (error, committed, node) => {\r\n        let dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    const unwatcher = onValue(ref, () => { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nPersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nConnection;\r\n/**\r\n * @internal\r\n */\r\nconst hijackHash = function (newHash) {\r\n    const oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nRepoInfo;\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */\r\nconst forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n * @internal\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAppCheckImpl - custom app check implementation\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction _initStandalone({ app, url, version, customAuthImpl, customAppCheckImpl, nodeAdmin = false }) {\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    const componentContainer = new ComponentContainer('database-standalone');\r\n    const authProvider = new Provider('auth-internal', componentContainer);\r\n    let appCheckProvider;\r\n    if (customAppCheckImpl) {\r\n        appCheckProvider = new Provider('app-check-internal', componentContainer);\r\n        appCheckProvider.setComponent(new Component('app-check-internal', () => customAppCheckImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    }\r\n    authProvider.setComponent(new Component('auth-internal', () => customAuthImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin);\r\n}\n\n/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterDatabase();\n\nexport { DataSnapshot, Database, OnDisconnect, QueryConstraint, TransactionResult, QueryImpl as _QueryImpl, QueryParams as _QueryParams, ReferenceImpl as _ReferenceImpl, forceRestClient as _TEST_ACCESS_forceRestClient, hijackHash as _TEST_ACCESS_hijackHash, _initStandalone, repoManagerDatabaseFromApp as _repoManagerDatabaseFromApp, setSDKVersion as _setSDKVersion, validatePathString as _validatePathString, validateWritablePath as _validateWritablePath, child, connectDatabaseEmulator, enableLogging, endAt, endBefore, equalTo, forceLongPolling, forceWebSockets, get, getDatabase, goOffline, goOnline, increment, limitToFirst, limitToLast, off, onChildAdded, onChildChanged, onChildMoved, onChildRemoved, onDisconnect, onValue, orderByChild, orderByKey, orderByPriority, orderByValue, push, query, ref, refFromURL, remove, runTransaction, serverTimestamp, set, setPriority, setWithPriority, startAfter, startAt, update };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment\r\n */\r\nfunction isBrowser() {\r\n    return typeof self === 'object' && self.self === self;\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        !!navigator.userAgent &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // Typescript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data Javascript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber sychronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { lerp, getMousePos, getRandomString } from './utils.js';\n\n// Initialize mouse position object\nlet mousepos = {x: 0, y: 0};\n\n// Listen for mousemove events and update \n// 'mousepos' with the current mouse position\nwindow.addEventListener('mousemove', ev => {\n    // Save the mouse position\n    mousepos = getMousePos(ev);\n});\n\n// Class representing a DOM element \n// with some interactive behavior\nexport class Item {\n    // Initialize DOM and style related properties\n    DOM = {\n        // main DOM element\n        el: null,\n        // decoration sub-element\n        deco: null,\n    };\n    // tracks the x and y coordinates for animations\n    renderedStyles = { \n        x: {previous: 0, current: 0, amt: 0.1},\n        y: {previous: 0, current: 0, amt: 0.1}\n    };\n    // random string of 2000 chars\n    randomString = getRandomString(2000);\n    // tracks scroll position\n    scrollVal;\n    // tracks size and position of the DOM element\n    rect;\n\n    constructor(DOM_el) {\n        this.DOM.el = DOM_el;\n        this.DOM.deco = this.DOM.el.querySelector('.grid__item-img-decox');\n        // calculates initial size and position\n        this.calculateSizePosition();\n        // sets up event listeners\n        this.initEvents();\n    }\n\n    // Calculate and store the current scroll \n    // position and size/position of the DOM element\n    calculateSizePosition() {\n        // current scroll\n        this.scrollVal = {x: window.scrollX, y: window.scrollY};\n        // size/position\n        this.rect = this.DOM.el.getBoundingClientRect();\n    }\n\n    // Register event listeners for resize, mousemove, \n    // mouseenter and mouseleave\n    initEvents() {\n        // On resize, recalculate the size and position\n        window.addEventListener('resize', () => this.calculateSizePosition());\n\n        // On mousemove over the element, generate a \n        // new random string\n        this.DOM.el.addEventListener('mousemove', () => {\n            // Get a new random string\n            this.randomString = getRandomString(2000);\n        });\n\n        // On mouseenter, fade in the deco element and \n        // start the animation loop\n        this.DOM.el.addEventListener('mouseenter', () => {\n            gsap.to(this.DOM.deco, {\n                duration: .5,\n                ease: 'power3',\n                opacity: 1\n            });\n            const isFirstTick = true;\n            this.loopRender(isFirstTick);\n        });\n        \n        // On mouseleave, stop the animation loop and \n        // fade out the deco element\n        this.DOM.el.addEventListener('mouseleave', () => {\n            this.stopRendering();\n            \n            gsap.to(this.DOM.deco, {\n                duration: .5,\n                ease: 'power3',\n                opacity: 0\n            });\n        });\n    }\n\n    // Request a new animation frame to start or \n    // continue the render loop\n    loopRender(isFirstTick = false) {\n        if ( !this.requestId ) {\n            this.requestId = requestAnimationFrame(() => this.render(isFirstTick));\n        }\n    }\n\n    // Cancel any ongoing render loop\n    stopRendering() {\n        if ( this.requestId ) {\n            window.cancelAnimationFrame(this.requestId);\n            this.requestId = undefined;\n        }\n    }\n\n    // Render the current frame\n    render(isFirstTick) {\n        // Clear requestId for the next frame\n        this.requestId = undefined;\n        \n        // Calculate the difference between the current \n        // scroll position and the stored one\n        const scrollDiff = {\n            x: this.scrollVal.x - window.scrollX,\n            y: this.scrollVal.y - window.scrollY\n        };\n\n        // Calculate the new translation values based on \n        // the mouse position, scroll difference and \n        // the element's position\n        this.renderedStyles['x'].current = (mousepos.x - (scrollDiff.x + this.rect.left));\n        this.renderedStyles['y'].current = (mousepos.y - (scrollDiff.y + this.rect.top));\n        \n        // If it's the first animation tick, set the \n        // previous values to be the same as the current ones\n        if ( isFirstTick ) {\n            this.renderedStyles['x'].previous = this.renderedStyles['x'].current;\n            this.renderedStyles['y'].previous = this.renderedStyles['y'].current;\n        }\n\n        // Update the previous value to be a linear \n        // interpolation between the previous and current values\n        for (const key in this.renderedStyles ) {\n            this.renderedStyles[key].previous = lerp(this.renderedStyles[key].previous, this.renderedStyles[key].current, this.renderedStyles[key].amt);\n        }\n        \n        // Apply the new styles to the DOM element \n        // using CSS variables\n        gsap.set(this.DOM.el, {\n            '--x': this.renderedStyles['x'].previous,\n            '--y': this.renderedStyles['y'].previous\n        });\n\n        // Set the deco element's innerHTML to the random string\n        this.DOM.deco.innerHTML = this.randomString;\n\n        // Request the next frame\n        this.loopRender();\n    }\n}","// Linear interpolation\nconst lerp = (a, b, n) => (1 - n) * a + n * b;\n\n// Gets the mouse position\nconst getMousePos = e => {\n    return { \n        x : e.clientX, \n        y : e.clientY \n    };\n};\n\n// This function generates a random string of a given length\nconst getRandomString = length => {\n    let result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return result;\n};\n\nexport { \n    lerp, \n    getMousePos,\n    getRandomString,\n};","/*! lozad.js - v1.16.0 - 2020-09-06\n* https://github.com/ApoorvSaxena/lozad.js\n* Copyright (c) 2020 Apoorv Saxena; Licensed MIT */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.lozad=e()}(this,function(){\"use strict\";\n/**\n   * Detect IE browser\n   * @const {boolean}\n   * @private\n   */var g=\"undefined\"!=typeof document&&document.documentMode,f={rootMargin:\"0px\",threshold:0,load:function(t){if(\"picture\"===t.nodeName.toLowerCase()){var e=t.querySelector(\"img\"),r=!1;null===e&&(e=document.createElement(\"img\"),r=!0),g&&t.getAttribute(\"data-iesrc\")&&(e.src=t.getAttribute(\"data-iesrc\")),t.getAttribute(\"data-alt\")&&(e.alt=t.getAttribute(\"data-alt\")),r&&t.append(e)}if(\"video\"===t.nodeName.toLowerCase()&&!t.getAttribute(\"data-src\")&&t.children){for(var a=t.children,o=void 0,i=0;i<=a.length-1;i++)(o=a[i].getAttribute(\"data-src\"))&&(a[i].src=o);t.load()}t.getAttribute(\"data-poster\")&&(t.poster=t.getAttribute(\"data-poster\")),t.getAttribute(\"data-src\")&&(t.src=t.getAttribute(\"data-src\")),t.getAttribute(\"data-srcset\")&&t.setAttribute(\"srcset\",t.getAttribute(\"data-srcset\"));var n=\",\";if(t.getAttribute(\"data-background-delimiter\")&&(n=t.getAttribute(\"data-background-delimiter\")),t.getAttribute(\"data-background-image\"))t.style.backgroundImage=\"url('\"+t.getAttribute(\"data-background-image\").split(n).join(\"'),url('\")+\"')\";else if(t.getAttribute(\"data-background-image-set\")){var d=t.getAttribute(\"data-background-image-set\").split(n),u=d[0].substr(0,d[0].indexOf(\" \"))||d[0];// Substring before ... 1x\nu=-1===u.indexOf(\"url(\")?\"url(\"+u+\")\":u,1===d.length?t.style.backgroundImage=u:t.setAttribute(\"style\",(t.getAttribute(\"style\")||\"\")+\"background-image: \"+u+\"; background-image: -webkit-image-set(\"+d+\"); background-image: image-set(\"+d+\")\")}t.getAttribute(\"data-toggle-class\")&&t.classList.toggle(t.getAttribute(\"data-toggle-class\"))},loaded:function(){}};function A(t){t.setAttribute(\"data-loaded\",!0)}var m=function(t){return\"true\"===t.getAttribute(\"data-loaded\")},v=function(t){var e=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return t instanceof Element?[t]:t instanceof NodeList?t:e.querySelectorAll(t)};return function(){var r,a,o=0<arguments.length&&void 0!==arguments[0]?arguments[0]:\".lozad\",t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},e=Object.assign({},f,t),i=e.root,n=e.rootMargin,d=e.threshold,u=e.load,g=e.loaded,s=void 0;\"undefined\"!=typeof window&&window.IntersectionObserver&&(s=new IntersectionObserver((r=u,a=g,function(t,e){t.forEach(function(t){(0<t.intersectionRatio||t.isIntersecting)&&(e.unobserve(t.target),m(t.target)||(r(t.target),A(t.target),a(t.target)))})}),{root:i,rootMargin:n,threshold:d}));for(var c,l=v(o,i),b=0;b<l.length;b++)(c=l[b]).getAttribute(\"data-placeholder-background\")&&(c.style.background=c.getAttribute(\"data-placeholder-background\"));return{observe:function(){for(var t=v(o,i),e=0;e<t.length;e++)m(t[e])||(s?s.observe(t[e]):(u(t[e]),A(t[e]),g(t[e])))},triggerLoad:function(t){m(t)||(u(t),A(t),g(t))},observer:s}}});\n","/*!\n * Cuberto Mouse Follower\n * https://cuberto.com/\n *\n * @version 1.1.2\n * @author Cuberto, Artem Dordzhiev (Draft)\n */\nvar MouseFollower = /*#__PURE__*/function () {\n  /**\n   * @typedef {Object} MouseFollowerOptions\n   * @property {string|HTMLElement|null} [el] Existed cursor element.\n   * @property {string|HTMLElement|null} [container] Cursor container.\n   * @property {string} [className] Cursor root element class name.\n   * @property {string} [innerClassName] Inner element class name.\n   * @property {string} [textClassName] Text element class name.\n   * @property {string} [mediaClassName] Media element class name.\n   * @property {string} [mediaBoxClassName] Media inner element class name.\n   * @property {string} [iconSvgClassName] SVG sprite class name.\n   * @property {string} [iconSvgNamePrefix] SVG sprite icon class name prefix.\n   * @property {string} [iconSvgSrc] SVG sprite source.\n   * @property {string|null} [dataAttr] Name of data attribute for changing cursor state directly in HTML.\n   * @property {string} [hiddenState] Hidden state name.\n   * @property {string} [textState] Text state name.\n   * @property {string} [iconState] Icon state name.\n   * @property {string|null} [activeState] Active (mousedown) state name. Set false to disable.\n   * @property {string} [mediaState] Media (image/video) state name.\n   * @property {Object} [stateDetection] State detection rules.\n   * @property {boolean} [visible] Is cursor visible by default.\n   * @property {boolean} [visibleOnState] Automatically show/hide cursor when state added.\n   * @property {number} [speed] Cursor movement speed.\n   * @property {string} [ease] Timing function of cursor movement.\n   * @property {boolean} [overwrite] Overwrite or remain cursor position when `mousemove` event happens.\n   * @property {number} [skewing] Default skewing factor.\n   * @property {number} [skewingText] Skewing effect factor in a text state.\n   * @property {number} [skewingIcon] Skewing effect factor in a icon state.\n   * @property {number} [skewingMedia] Skewing effect factor in a media (image/video) state.\n   * @property {number} [skewingDelta] Skewing effect base delta.\n   * @property {number} [skewingDeltaMax] Skew effect max delta.\n   * @property {number} [stickDelta] Stick effect delta.\n   * @property {number} [showTimeout] Delay before show.\n   * @property {boolean} [hideOnLeave] Hide the cursor when mouse leave container.\n   * @property {number} [hideTimeout] Delay before hiding. It should be equal to the CSS hide animation time.\n   * @property {number[]} [initialPos] Array (x, y) of initial cursor position.\n   */\n\n  /**\n   * Register GSAP animation library.\n   *\n   * @param {gsap} gsap GSAP library.\n   */\n  MouseFollower.registerGSAP = function registerGSAP(gsap) {\n    MouseFollower.gsap = gsap;\n  }\n  /**\n   * Create cursor instance.\n   *\n   * @param {MouseFollowerOptions} [options] Cursor options.\n   */\n  ;\n\n  function MouseFollower(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    /** @type {MouseFollowerOptions} **/\n    this.options = Object.assign({}, {\n      el: null,\n      container: document.body,\n      className: 'mf-cursor',\n      innerClassName: 'mf-cursor-inner',\n      textClassName: 'mf-cursor-text',\n      mediaClassName: 'mf-cursor-media',\n      mediaBoxClassName: 'mf-cursor-media-box',\n      iconSvgClassName: 'mf-svgsprite',\n      iconSvgNamePrefix: '-',\n      iconSvgSrc: '',\n      dataAttr: 'cursor',\n      hiddenState: '-hidden',\n      textState: '-text',\n      iconState: '-icon',\n      activeState: '-active',\n      mediaState: '-media',\n      stateDetection: {\n        '-pointer': 'a,button'\n      },\n      visible: true,\n      visibleOnState: false,\n      speed: 0.55,\n      ease: 'expo.out',\n      overwrite: true,\n      skewing: 0,\n      skewingText: 2,\n      skewingIcon: 2,\n      skewingMedia: 2,\n      skewingDelta: 0.001,\n      skewingDeltaMax: 0.15,\n      stickDelta: 0.15,\n      showTimeout: 0,\n      hideOnLeave: true,\n      hideTimeout: 300,\n      hideMediaTimeout: 300,\n      initialPos: [-window.innerWidth, -window.innerHeight]\n    }, options);\n    if (this.options.visible && options.stateDetection == null) this.options.stateDetection['-hidden'] = 'iframe';\n    this.gsap = MouseFollower.gsap || window.gsap;\n    this.el = typeof this.options.el === 'string' ? document.querySelector(this.options.el) : this.options.el;\n    this.container = typeof this.options.container === 'string' ? document.querySelector(this.options.container) : this.options.container;\n    this.skewing = this.options.skewing;\n    this.pos = {\n      x: this.options.initialPos[0],\n      y: this.options.initialPos[1]\n    };\n    this.vel = {\n      x: 0,\n      y: 0\n    };\n    this.event = {};\n    this.events = [];\n    this.init();\n  }\n  /**\n   * Init cursor.\n   */\n\n\n  var _proto = MouseFollower.prototype;\n\n  _proto.init = function init() {\n    if (!this.el) this.create();\n    this.createSetter();\n    this.bind();\n    this.render(true);\n    this.ticker = this.render.bind(this, false);\n    this.gsap.ticker.add(this.ticker);\n  }\n  /**\n   * Create cursor DOM element and append to container.\n   */\n  ;\n\n  _proto.create = function create() {\n    this.el = document.createElement('div');\n    this.el.className = this.options.className;\n    this.el.classList.add(this.options.hiddenState);\n    this.inner = document.createElement('div');\n    this.inner.className = this.options.innerClassName;\n    this.text = document.createElement('div');\n    this.text.className = this.options.textClassName;\n    this.media = document.createElement('div');\n    this.media.className = this.options.mediaClassName;\n    this.mediaBox = document.createElement('div');\n    this.mediaBox.className = this.options.mediaBoxClassName;\n    this.media.appendChild(this.mediaBox);\n    this.inner.appendChild(this.media);\n    this.inner.appendChild(this.text);\n    this.el.appendChild(this.inner);\n    this.container.appendChild(this.el);\n  }\n  /**\n   * Create GSAP setters.\n   */\n  ;\n\n  _proto.createSetter = function createSetter() {\n    this.setter = {\n      x: this.gsap.quickSetter(this.el, 'x', 'px'),\n      y: this.gsap.quickSetter(this.el, 'y', 'px'),\n      rotation: this.gsap.quickSetter(this.el, 'rotation', 'deg'),\n      scaleX: this.gsap.quickSetter(this.el, 'scaleX'),\n      scaleY: this.gsap.quickSetter(this.el, 'scaleY'),\n      wc: this.gsap.quickSetter(this.el, 'willChange'),\n      inner: {\n        rotation: this.gsap.quickSetter(this.inner, 'rotation', 'deg')\n      }\n    };\n  }\n  /**\n   * Create and attach events.\n   */\n  ;\n\n  _proto.bind = function bind() {\n    var _this = this;\n\n    this.event.mouseleave = function () {\n      return _this.hide();\n    };\n\n    this.event.mouseenter = function () {\n      return _this.show();\n    };\n\n    this.event.mousedown = function () {\n      return _this.addState(_this.options.activeState);\n    };\n\n    this.event.mouseup = function () {\n      return _this.removeState(_this.options.activeState);\n    };\n\n    this.event.mousemoveOnce = function () {\n      return _this.show();\n    };\n\n    this.event.mousemove = function (e) {\n      _this.gsap.to(_this.pos, {\n        x: _this.stick ? _this.stick.x - (_this.stick.x - e.clientX) * _this.options.stickDelta : e.clientX,\n        y: _this.stick ? _this.stick.y - (_this.stick.y - e.clientY) * _this.options.stickDelta : e.clientY,\n        overwrite: _this.options.overwrite,\n        ease: _this.options.ease,\n        duration: _this.visible ? _this.options.speed : 0,\n        onUpdate: function onUpdate() {\n          return _this.vel = {\n            x: e.clientX - _this.pos.x,\n            y: e.clientY - _this.pos.y\n          };\n        }\n      });\n    };\n\n    this.event.mouseover = function (e) {\n      for (var target = e.target; target && target !== _this.container; target = target.parentNode) {\n        if (e.relatedTarget && target.contains(e.relatedTarget)) break;\n\n        for (var state in _this.options.stateDetection) {\n          if (target.matches(_this.options.stateDetection[state])) _this.addState(state);\n        }\n\n        if (_this.options.dataAttr) {\n          var params = _this.getFromDataset(target);\n\n          if (params.state) _this.addState(params.state);\n          if (params.text) _this.setText(params.text);\n          if (params.icon) _this.setIcon(params.icon);\n          if (params.img) _this.setImg(params.img);\n          if (params.video) _this.setVideo(params.video);\n          if (typeof params.show !== 'undefined') _this.show();\n          if (typeof params.stick !== 'undefined') _this.setStick(params.stick || target);\n        }\n      }\n    };\n\n    this.event.mouseout = function (e) {\n      for (var target = e.target; target && target !== _this.container; target = target.parentNode) {\n        if (e.relatedTarget && target.contains(e.relatedTarget)) break;\n\n        for (var state in _this.options.stateDetection) {\n          if (target.matches(_this.options.stateDetection[state])) _this.removeState(state);\n        }\n\n        if (_this.options.dataAttr) {\n          var params = _this.getFromDataset(target);\n\n          if (params.state) _this.removeState(params.state);\n          if (params.text) _this.removeText();\n          if (params.icon) _this.removeIcon();\n          if (params.img) _this.removeImg();\n          if (params.video) _this.removeVideo();\n          if (typeof params.show !== 'undefined') _this.hide();\n          if (typeof params.stick !== 'undefined') _this.removeStick();\n        }\n      }\n    };\n\n    if (this.options.hideOnLeave) {\n      this.container.addEventListener('mouseleave', this.event.mouseleave, {\n        passive: true\n      });\n    }\n\n    if (this.options.visible) {\n      this.container.addEventListener('mouseenter', this.event.mouseenter, {\n        passive: true\n      });\n    }\n\n    if (this.options.activeState) {\n      this.container.addEventListener('mousedown', this.event.mousedown, {\n        passive: true\n      });\n      this.container.addEventListener('mouseup', this.event.mouseup, {\n        passive: true\n      });\n    }\n\n    this.container.addEventListener('mousemove', this.event.mousemove, {\n      passive: true\n    });\n\n    if (this.options.visible) {\n      this.container.addEventListener('mousemove', this.event.mousemoveOnce, {\n        passive: true,\n        once: true\n      });\n    }\n\n    if (this.options.stateDetection || this.options.dataAttr) {\n      this.container.addEventListener('mouseover', this.event.mouseover, {\n        passive: true\n      });\n      this.container.addEventListener('mouseout', this.event.mouseout, {\n        passive: true\n      });\n    }\n  }\n  /**\n   * Render the cursor in a new position.\n   *\n   * @param {boolean} [force=false] Force render.\n   */\n  ;\n\n  _proto.render = function render(force) {\n    if (force !== true && (this.vel.y === 0 || this.vel.x === 0)) {\n      this.setter.wc('auto');\n      return;\n    }\n\n    this.trigger('render');\n    this.setter.wc('transform');\n    this.setter.x(this.pos.x);\n    this.setter.y(this.pos.y);\n\n    if (this.skewing) {\n      var distance = Math.sqrt(Math.pow(this.vel.x, 2) + Math.pow(this.vel.y, 2));\n      var scale = Math.min(distance * this.options.skewingDelta, this.options.skewingDeltaMax) * this.skewing;\n      var angle = Math.atan2(this.vel.y, this.vel.x) * 180 / Math.PI;\n      this.setter.rotation(angle);\n      this.setter.scaleX(1 + scale);\n      this.setter.scaleY(1 - scale);\n      this.setter.inner.rotation(-angle);\n    }\n  }\n  /**\n   * Show cursor.\n   */\n  ;\n\n  _proto.show = function show() {\n    var _this2 = this;\n\n    this.trigger('show');\n    clearInterval(this.visibleInt);\n    this.visibleInt = setTimeout(function () {\n      _this2.el.classList.remove(_this2.options.hiddenState);\n\n      _this2.visible = true;\n\n      _this2.render(true);\n    }, this.options.showTimeout);\n  }\n  /**\n   * Hide cursor.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    var _this3 = this;\n\n    this.trigger('hide');\n    clearInterval(this.visibleInt);\n    this.el.classList.add(this.options.hiddenState);\n    this.visibleInt = setTimeout(function () {\n      return _this3.visible = false;\n    }, this.options.hideTimeout);\n  }\n  /**\n   * Toggle cursor.\n   *\n   * @param {boolean} [force] Force state.\n   */\n  ;\n\n  _proto.toggle = function toggle(force) {\n    if (force === true || force !== false && !this.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Add state/states to the cursor.\n   *\n   * @param {string} state State name.\n   */\n  ;\n\n  _proto.addState = function addState(state) {\n    var _this$el$classList;\n\n    this.trigger('addState', state);\n    if (state === this.options.hiddenState) return this.hide();\n\n    (_this$el$classList = this.el.classList).add.apply(_this$el$classList, state.split(' '));\n\n    if (this.options.visibleOnState) this.show();\n  }\n  /**\n   * Remove state/states from cursor.\n   *\n   * @param {string} state State name.\n   */\n  ;\n\n  _proto.removeState = function removeState(state) {\n    var _this$el$classList2;\n\n    this.trigger('removeState', state);\n    if (state === this.options.hiddenState) return this.show();\n\n    (_this$el$classList2 = this.el.classList).remove.apply(_this$el$classList2, state.split(' '));\n\n    if (this.options.visibleOnState && this.el.className === this.options.className) this.hide();\n  }\n  /**\n   * Toggle cursor state.\n   *\n   * @param {string} state State name.\n   * @param {boolean} [force] Force state.\n   */\n  ;\n\n  _proto.toggleState = function toggleState(state, force) {\n    if (force === true || force !== false && !this.el.classList.contains(state)) {\n      this.addState(state);\n    } else {\n      this.removeState(state);\n    }\n  }\n  /**\n   * Set factor of skewing effect.\n   *\n   * @param {number} value Skewing factor.\n   */\n  ;\n\n  _proto.setSkewing = function setSkewing(value) {\n    this.gsap.to(this, {\n      skewing: value\n    });\n  }\n  /**\n   * Reverts skewing factor to default.\n   */\n  ;\n\n  _proto.removeSkewing = function removeSkewing() {\n    this.gsap.to(this, {\n      skewing: this.options.skewing\n    });\n  }\n  /**\n   * Stick cursor to the element.\n   *\n   * @param {string|HTMLElement} element Element or selector.\n   */\n  ;\n\n  _proto.setStick = function setStick(element) {\n    var el = typeof element === 'string' ? document.querySelector(element) : element;\n    var rect = el.getBoundingClientRect();\n    this.stick = {\n      y: rect.top + rect.height / 2,\n      x: rect.left + rect.width / 2\n    };\n  }\n  /**\n   * Unstick cursor from the element.\n   */\n  ;\n\n  _proto.removeStick = function removeStick() {\n    this.stick = false;\n  }\n  /**\n   * Transform cursor to text mode with a given string.\n   *\n   * @param {string} text Text.\n   */\n  ;\n\n  _proto.setText = function setText(text) {\n    this.text.innerHTML = text;\n    this.addState(this.options.textState);\n    this.setSkewing(this.options.skewingText);\n  }\n  /**\n   * Reverts cursor from text mode.\n   */\n  ;\n\n  _proto.removeText = function removeText() {\n    this.removeState(this.options.textState);\n    this.removeSkewing();\n  }\n  /**\n   * Transform cursor to svg icon mode.\n   *\n   * @param {string} name Icon identifier.\n   * @param {string} [style=\"\"] Additional SVG styles.\n   */\n  ;\n\n  _proto.setIcon = function setIcon(name, style) {\n    if (style === void 0) {\n      style = '';\n    }\n\n    this.text.innerHTML = \"<svg class='\" + this.options.iconSvgClassName + \" \" + this.options.iconSvgNamePrefix + name + \"'\" + (\" style='\" + style + \"'><use xlink:href='\" + this.options.iconSvgSrc + \"#\" + name + \"'></use></svg>\");\n    this.addState(this.options.iconState);\n    this.setSkewing(this.options.skewingIcon);\n  }\n  /**\n   * Reverts cursor from icon mode.\n   */\n  ;\n\n  _proto.removeIcon = function removeIcon() {\n    this.removeState(this.options.iconState);\n    this.removeSkewing();\n  }\n  /**\n   * Transform cursor to media mode with a given element.\n   *\n   * @param {HTMLElement} element Element.\n   */\n  ;\n\n  _proto.setMedia = function setMedia(element) {\n    var _this4 = this;\n\n    clearTimeout(this.mediaInt);\n\n    if (element) {\n      this.mediaBox.innerHTML = '';\n      this.mediaBox.appendChild(element);\n    }\n\n    this.mediaInt = setTimeout(function () {\n      return _this4.addState(_this4.options.mediaState);\n    }, 20);\n    this.setSkewing(this.options.skewingMedia);\n  }\n  /**\n   * Revert cursor from media mode.\n   */\n  ;\n\n  _proto.removeMedia = function removeMedia() {\n    var _this5 = this;\n\n    clearTimeout(this.mediaInt);\n    this.removeState(this.options.mediaState);\n    this.mediaInt = setTimeout(function () {\n      return _this5.mediaBox.innerHTML = '';\n    }, this.options.hideMediaTimeout);\n    this.removeSkewing();\n  }\n  /**\n   * Transform cursor to image mode.\n   *\n   * @param {string} url Image url.\n   */\n  ;\n\n  _proto.setImg = function setImg(url) {\n    if (!this.mediaImg) this.mediaImg = new Image();\n    if (this.mediaImg.src !== url) this.mediaImg.src = url;\n    this.setMedia(this.mediaImg);\n  }\n  /**\n   * Reverts cursor from image mode.\n   */\n  ;\n\n  _proto.removeImg = function removeImg() {\n    this.removeMedia();\n  }\n  /**\n   * Transform cursor to video mode.\n   *\n   * @param {string} url Video url.\n   */\n  ;\n\n  _proto.setVideo = function setVideo(url) {\n    if (!this.mediaVideo) {\n      this.mediaVideo = document.createElement('video');\n      this.mediaVideo.muted = true;\n      this.mediaVideo.loop = true;\n      this.mediaVideo.autoplay = true;\n    }\n\n    if (this.mediaVideo.src !== url) {\n      this.mediaVideo.src = url;\n      this.mediaVideo.load();\n    }\n\n    this.mediaVideo.play();\n    this.setMedia(this.mediaVideo);\n  }\n  /**\n   * Reverts cursor from video mode.\n   */\n  ;\n\n  _proto.removeVideo = function removeVideo() {\n    if (this.mediaVideo && this.mediaVideo.readyState > 2) this.mediaVideo.pause();\n    this.removeMedia();\n  }\n  /**\n   * Attach an event handler function.\n   *\n   * @param {string} event Event name.\n   * @param {function} callback Callback.\n   */\n  ;\n\n  _proto.on = function on(event, callback) {\n    if (!(this.events[event] instanceof Array)) this.off(event);\n    this.events[event].push(callback);\n  }\n  /**\n   * Remove an event handler.\n   *\n   * @param {string} event Event name.\n   * @param {function} [callback] Callback.\n   */\n  ;\n\n  _proto.off = function off(event, callback) {\n    if (callback) {\n      this.events[event] = this.events[event].filter(function (f) {\n        return f !== callback;\n      });\n    } else {\n      this.events[event] = [];\n    }\n  }\n  /**\n   * Execute all handlers for the given event type.\n   *\n   * @param {string} event Event name.\n   * @param params Extra parameters.\n   */\n  ;\n\n  _proto.trigger = function trigger(event) {\n    var _arguments = arguments,\n        _this6 = this;\n\n    if (!this.events[event]) return;\n    this.events[event].forEach(function (f) {\n      return f.call.apply(f, [_this6, _this6].concat([].slice.call(_arguments, 1)));\n    });\n  }\n  /**\n   * Get cursor options from data attribute of a given element.\n   *\n   * @param {HTMLElement} element Element.\n   * @return {Object} Options.\n   */\n  ;\n\n  _proto.getFromDataset = function getFromDataset(element) {\n    var dataset = element.dataset;\n    return {\n      state: dataset[this.options.dataAttr],\n      show: dataset[this.options.dataAttr + 'Show'],\n      text: dataset[this.options.dataAttr + 'Text'],\n      icon: dataset[this.options.dataAttr + 'Icon'],\n      img: dataset[this.options.dataAttr + 'Img'],\n      video: dataset[this.options.dataAttr + 'Video'],\n      stick: dataset[this.options.dataAttr + 'Stick']\n    };\n  }\n  /**\n   * Destroy cursor instance.\n   */\n  ;\n\n  _proto.destroy = function destroy() {\n    this.trigger('destroy');\n    this.gsap.ticker.remove(this.ticker);\n    this.container.removeEventListener('mouseleave', this.event.mouseleave);\n    this.container.removeEventListener('mouseenter', this.event.mouseenter);\n    this.container.removeEventListener('mousedown', this.event.mousedown);\n    this.container.removeEventListener('mouseup', this.event.mouseup);\n    this.container.removeEventListener('mousemove', this.event.mousemove);\n    this.container.removeEventListener('mousemove', this.event.mousemoveOnce);\n    this.container.removeEventListener('mouseover', this.event.mouseover);\n    this.container.removeEventListener('mouseout', this.event.mouseout);\n\n    if (this.el) {\n      this.container.removeChild(this.el);\n      this.el = null;\n      this.mediaImg = null;\n      this.mediaVideo = null;\n    }\n  };\n\n  return MouseFollower;\n}();\n\nexport { MouseFollower as default };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.9.28\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"10.8.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        try {\r\n                            db.createObjectStore(STORE_NAME);\r\n                        }\r\n                        catch (e) {\r\n                            // Safari/iOS browsers throw occasional exceptions on\r\n                            // db.createObjectStore() that may be a bug. Avoid blocking\r\n                            // the rest of the app functionality.\r\n                            console.warn(e);\r\n                        }\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME);\r\n        const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\r\n        // We already have the value but tx.done can throw,\r\n        // so we need to await it here to catch errors\r\n        await tx.done;\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        var _a, _b;\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n            // If we failed to construct a heartbeats cache, then return immediately.\r\n            if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\r\n                return;\r\n            }\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        var _a;\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\r\n                return idbHeartbeatObject;\r\n            }\r\n            else {\r\n                return { heartbeats: [] };\r\n            }\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$o, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"10.8.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//Imports modules in file\nimport MouseFollower from \"mouse-follower\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, push, set } from \"firebase/database\";\nimport lozad from \"lozad\";\n\n// import gsap from \"gsap\";\n// import \"splitting/dist/splitting.css\";\n// import \"splitting/dist/splitting-cells.css\";\n// import Splitting from \"splitting\";\n// import ScrollTrigger from \"gsap/ScrollTrigger\";\n// import ScrollToPlugin from \"gsap/ScrollToPlugin\";\n\n//global\nlet select = (e) => document.querySelector(e);\nlet selectAll = (e) => document.querySelectorAll(e);\n\n// Group 0: lazyload lodash\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const observer = lozad(\".lozad\", {\n    rootMargin: \"100px 0px\",\n    loaded: function (el) {\n      // console.log(\"Element loaded:\", el);\n    },\n  });\n  observer.observe();\n});\n\n// group 0.1 : register service worker\n\nif (\"serviceWorker\" in navigator) {\n  window.addEventListener(\"load\", () => {\n    navigator.serviceWorker\n      .register(\"hypercritical-worker.js\")\n      //  .then(reg=>\n      //   // console.log('serviceWorker')\n      //   )\n      .catch((err) => console.log(\"Error:\", err));\n  });\n}\n\n//Group 1: menuUzi midmoon\n\nlet midmoon = select(\".mid-moon\");\nlet menuclose = select(\".action--close\");\nlet menuopen = select(\".action--menuUzi\");\n\nfunction open() {\n  midmoon.classList.add(\"mid-moon--light\");\n  midmoon.classList.remove(\"mid-moon--dark\");\n}\n// Close the menuUzi.\nfunction close() {\n  midmoon.classList.add(\"mid-moon--dark\");\n  midmoon.classList.remove(\"mid-moon--light\");\n}\n\nmenuopen.addEventListener(\"click\", open);\nmenuclose.addEventListener(\"click\", close);\n\n// Group 2: assign links\n\nfunction assignLinks(config) {\n  for (const key in config) {\n    if (config.hasOwnProperty(key)) {\n      const elements = selectAll(key);\n      elements.forEach((element) => {\n        if (element) {\n          element.href = config[key];\n        } else {\n          console.error(`Elements matching selector ${key} not found.`);\n        }\n      });\n    }\n  }\n}\n\nnew Promise((resolve, reject) => {\n  document.addEventListener(\"DOMContentLoaded\", function () {\n    fetch(\"includes/config.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        assignLinks(data);\n        resolve();\n      })\n      .catch((error) => {\n        console.error(\"Error loading config:\", error);\n        reject(error); // Reject the promise if there's an error`\n      });\n  });\n})\n  .then(() => {\n    console.log(\n      \"%c Greetings from Hypercritical\",\n      \"color:white;background:#c389e1; font-size: 26px;font-family:sans-serif\"\n    );\n  })\n  .catch((error) => {\n    console.error(\"Failed to load configuration or assign links:\", error);\n  });\n\n//GRoup 3: animation on hover of contact emoji\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let menuUziItemLink = select(\".menuUzi__item-link\");\n  let defaultImage = menuUziItemLink.querySelector(\".contact-emoji\");\n\n  let rotateremoji = gsap.timeline();\n\n  const rotateemoji = () => {\n    rotateremoji.to(defaultImage, {\n      duration: 1,\n      rotation: -360,\n      repeat: -1,\n      ease: \"linear\",\n    });\n  };\n\n  menuUziItemLink.addEventListener(\"mouseover\", rotateemoji);\n  menuUziItemLink.addEventListener(\"mouseout\", () => {\n    rotateremoji.kill();\n  });\n});\n\n//group 4: smooth scrolling\n\ngsap.registerPlugin(ScrollTrigger, ScrollSmoother);\n\nfunction smoother() {\n  ScrollSmoother.create({\n    smooth: 1,\n    effects: true,\n    smoothTouch: 0.1,\n  });\n}\n\nif (window.innerWidth > 767) {\n  smoother();\n}\n\nwindow.addEventListener(\"resize\", smoother);\n\n//Group 5: Animating into into place\n\ngsap.registerPlugin(ScrollTrigger);\ngsap.registerPlugin(ScrollToPlugin);\ngsap.registerPlugin(SplitText);\n\nconst herolargelogo = select(\".hero-largelogo\");\n\nlet herotext = new SplitText(herolargelogo, { type: \"words\", wordsClass: \"hero-words\" });\n\nconst splitchars = selectAll(\".split-chars\");\n\nsplitchars.forEach((splitchar) => {\n  new SplitText(splitchar, {\n    type: \"chars\",\n    charsClass: \"otherchars\",\n  });\n});\n\nlet herowords = selectAll(\".hero-words\");\n\n// console.log(herowords);\n\nlet heroSeparator = select(\".below-line\"),\n  heroMedia = select(\".parallax-hero\");\nlet heroimageWrapper = select(\".hero-image\");\n\nconst showHero = () => {\n  gsap\n    .timeline({ defaults: { ease: \"expo.out\", delay: 0.5 } })\n    // .set(heroMedia, { y: \"-47.8vh\" }, \"=-1\")\n    .addLabel(\"start\")\n    .fromTo(\n      heroSeparator,\n      { width: 0 },\n      {\n        duration: 1.75,\n        width: \"100%\",\n        stagger: 0.095,\n      },\n      \"start\"\n    )\n    .fromTo(\n      herowords,\n      { y: \"110%\" },\n\n      {\n        delay: 0,\n        duration: 2.3,\n        y: \"0\",\n        stagger: 0.17,\n        ease: \"expo.inOut\",\n      },\n      \"start+=0.28\"\n    )\n\n    .fromTo(\n      heroimageWrapper,\n      { width: 0 },\n\n      { width: \"100%\", duration: 1.5, ease: \"expo.inOut\", transformOrigin: \"50% 50% 0\" },\n      \"start+=0.7\"\n    );\n};\n\n// Group 7: parallax effect\n\nfunction initParallax() {\n  let slides = selectAll(\".slide\");\n  let slideId = 0;\n  slides.forEach((slide, i) => {\n    let imageWrapper = slide.querySelector(\".parallax-image\");\n    function heroParallax() {\n      gsap.fromTo(\n        imageWrapper,\n        {\n          y: innerWidth > 767 ? \"-60vh\" : \"-30vh\",\n        },\n        {\n          y: innerWidth > 767 ? \"60vh\" : \"30vh\",\n          scrollTrigger: {\n            trigger: slide,\n            scrub: true,\n            start: \"top bottom\", // position of trigger meets the scroller position\n            end: \"bottom top\",\n            markers: !1,\n          },\n          ease: \"none\",\n        }\n      );\n    }\n\n    heroParallax();\n    window.addEventListener(\"resize\", heroParallax);\n  });\n}\n\nfunction scrollTop() {\n  gsap.to(window, {\n    duration: 2,\n    scrollTo: {\n      y: \"nav\",\n    },\n    ease: \"power2.inOut\",\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  showHero();\n  initParallax();\n  setTimeout(() => {\n    scrollTop();\n  }, 3000);\n});\n\n//group 7 : animate divider lines using gsap and scrollTrigger\n\nfunction lineTimeline(element) {\n  const afterPseudotl = gsap.timeline({\n    defaults: {\n      duration: 3,\n      ease: \"power3.out\",\n    },\n  });\n\n  afterPseudotl.fromTo(\n    element,\n    {\n      scaleX: 0,\n      opacity: 0,\n      transformOrigin: \"left left\",\n    },\n    {\n      scaleX: 1,\n      opacity: 1,\n    }\n  );\n\n  return afterPseudotl;\n}\n\nselectAll(\"[line-trigger]\").forEach(function (element) {\n  const lineTrigger = element.getAttribute(\"line-trigger\");\n\n  const linetimeline = lineTimeline(element);\n\n  ScrollTrigger.create({\n    trigger: lineTrigger,\n    start: \"top 92%\",\n    animation: linetimeline,\n    onEnter: () => linetimeline.play(),\n    onLeaveBack: () => linetimeline.reverse({ duration: 6.5 }),\n  });\n});\n\n//group 8: show and hide the scroll top button and scroll to top\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  let toTopbutton = select(\"#toTop\");\n\n  // Add an event listener to check scroll position\n  function showTotop() {\n    let scrollPosition = window.scrollY || document.documentElement.scrollTop;\n\n    if (scrollPosition > 1.2 * window.innerHeight) {\n      toTopbutton.style.display = \"block\";\n    } else {\n      toTopbutton.style.display = \"none\";\n    }\n  }\n  showTotop();\n  window.addEventListener(\"scroll\", showTotop);\n\n  function scrollTop() {\n    gsap.to(window, {\n      duration: 2,\n      delay: 0,\n      scrollTo: {\n        y: \".hero-main\",\n      },\n      ease: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    });\n  }\n\n  toTopbutton.addEventListener(\"click\", scrollTop);\n});\n\n//Group 9: show mouse follower\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  function cursor() {\n    if (innerWidth > 767) {\n      let cursorme = new MouseFollower();\n    }\n  }\n\n  cursor();\n  window.addEventListener(\"res\", cursor);\n});\n\n//Group 10: control opening and closing of accordion\n\n//Group 10: control opening and closing of accordion\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const detailsElements = document.querySelectorAll(\".col__content-txt\");\n\n  detailsElements.forEach((details) => {\n    const content = details.querySelector(\".details-content\");\n    const summary = details.querySelector(\"summary\");\n\n    // Initially hide the content\n    gsap.set(content, { height: 0, overflow: \"hidden\" });\n\n    function openDetails() {\n      // Calculate the height of the content\n      const height = content.scrollHeight;\n\n      details.setAttribute(\"open\", \"\");\n      gsap.fromTo(\n        content,\n        { height: 0 },\n        {\n          height: height,\n          duration: 0.5,\n        }\n      );\n    }\n\n    function closeDetails() {\n      // Animate back to height 0\n      gsap.to(content, {\n        height: 0,\n        duration: 0.5,\n        onComplete: () => {\n          details.removeAttribute(\"open\");\n        },\n      });\n    }\n\n    // Event listener for the summary click\n    summary.addEventListener(\"click\", function (event) {\n      if (details.hasAttribute(\"open\")) {\n        // If the details are open, close them\n        closeDetails();\n      } else {\n        openDetails();\n      }\n\n      // Prevent the default action to avoid the default toggle behavior\n      event.preventDefault();\n    });\n  });\n\n  const accordionItems = document.querySelectorAll(\"details\");\n  accordionItems.forEach((accordionItem) => {\n    accordionItem.addEventListener(\"click\", (event) => {\n      accordionItems.forEach((sibling) => {\n        if (sibling != accordionItem) {\n          sibling.removeAttribute(\"open\");\n        }\n      });\n    });\n  });\n});\n\n// Group 11: elephant fun mouse\n\nlet elephant = select(\".c-elephant_himself\");\nlet elephant_wrapper = select(\".elephant-boundary\");\n// elephant_wrapper.addEventListener(\"mouseenter\", () => {\n\nconst elephantcursor = new MouseFollower({\n  el: elephant,\n  container: elephant_wrapper,\n  speed: 22.5,\n  hideTimeout: 30000,\n});\n\n// });\n\nlet peanutWrapper = select(\".ourservices\");\nconst peanutcursor = new MouseFollower();\n\npeanutWrapper.addEventListener(\"mouseenter\", () => {\n  peanutcursor.setImg(\"./../../assets/images/peanut.webp\");\n});\n\npeanutWrapper.addEventListener(\"mouseleave\", () => {\n  peanutcursor.removeImg();\n});\n\n// Group 12: inverse the arrow colors using gsap\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  gsap.registerPlugin(ScrollTrigger);\n\n  const darkSections = gsap.utils.toArray(\".white-section\");\n  var arrowWrapper = select(\".top-arrow-wrapper\");\n  var arrowpath = select(\".top-arrow-path\");\n  var menuName = select(\".menu-name\");\n  var menuDotline = selectAll(\".menu-dot-line\");\n\n  function makedark() {\n    arrowpath.style.stroke = \"var(--color-bg)\";\n    arrowWrapper.style.fill = \"var(--color-black)\";\n    menuDotline.forEach((menuDotline) => {\n      menuDotline.style.background = \"var(--color-black)\";\n    });\n    menuName.style.color = \"var(--color-black)\";\n  }\n\n  function makewhite() {\n    arrowpath.style.stroke = \"var(--color-black)\";\n    arrowWrapper.style.fill = \"var(--color-bg)\";\n    menuDotline.forEach((menuDotline) => {\n      menuDotline.style.background = \"var(--color-bg)\";\n    });\n    menuName.style.color = \"var(--color-bg)\";\n  }\n  darkSections.forEach((darkSection, i) => {\n    //  let id = i;\n    //  console.log(id);\n    const darken = gsap.timeline({\n      scrollTrigger: {\n        trigger: darkSection,\n        id: i + 1,\n        start: \"top top\",\n        endtrigger: darkSection,\n        end: \"bottom bottom\",\n        scrub: true,\n        // markers: true,\n        onEnter: () => makewhite(),\n        onLeave: () => makedark(),\n        onEnterBack: () => makewhite(),\n        onLeaveBack: () => makedark(),\n      },\n    });\n  });\n});\n\n//group 13: imported imagehover on innovation services\n\nimport { Item } from \"./code-anime/item\";\n\n[...selectAll(\".grid-itemz > .grid__item-img\")].forEach((img) => new Item(img));\n\n// group 14: animate how video resizes ..main video also includes autoplay\n\nlet worldvideoWrapper = select(\".global-video\");\nlet worldvideo = select(\"#video-background\");\n\ngsap.registerPlugin(ScrollTrigger);\n\nconst animateVideo = gsap.timeline({\n  scrollTrigger: {\n    trigger: worldvideoWrapper,\n    start: \"top bottom\",\n    end: \"top top\",\n    scrub: true,\n    markers: !1,\n    toggleActions: \"play none none reverse\",\n  },\n});\n\nanimateVideo.fromTo(\n  worldvideo,\n\n  {\n    scaleX: 0.9,\n    borderRadius: \"45px\",\n  },\n  {\n    scaleX: 1,\n    borderRadius: \"0px\",\n  }\n);\n\n//complicated way to pause and unpause video\n\nconst playvideotl = gsap.timeline({\n  scrollTrigger: {\n    trigger: worldvideo,\n    start: \"top bottom\",\n    end: \"bottom top\",\n    scrub: true,\n    onEnter: () => {\n      if (worldvideo.paused) {\n        worldvideo.play().catch((error) => {\n          if (error.name === \"NotAllowedError\") {\n            console.log(\"Play request was interrupted by a pause call.\");\n          } else {\n            console.error(\"An unexpected error occurred:\", error);\n          }\n        });\n      }\n    },\n    onLeave: () => {\n      if (!worldvideo.paused) {\n        worldvideo.pause();\n      }\n    },\n    onEnterBack: () => {\n      if (worldvideo.paused) {\n        worldvideo.play().catch((error) => {\n          if (error.name === \"NotAllowedError\") {\n            console.log(\"Play request was interrupted by a pause call.\");\n          } else {\n            console.error(\"An unexpected error occurred:\", error);\n          }\n        });\n      }\n    },\n    onLeaveBack: () => {\n      if (!worldvideo.paused) {\n        worldvideo.pause();\n      }\n    },\n  },\n});\n\nvar playPromise = worldvideo.play();\n\nif (playPromise !== undefined) {\n  playPromise.then((_) => {}).catch((error) => {});\n}\n\n//GRoup 14: animate button on portfolio work trailers\n\n// script.js\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const carouselItems = select(\".carousel\");\n  const backButton = select(\".-prev\");\n  const nextButton = select(\".-next\");\n\n  let currentIndex = 0;\n\n  function moveCarousel(direction) {\n    const itemWidth = carouselItems.children[0].offsetWidth;\n    const carouselWidth = carouselItems.offsetWidth;\n    const totalItems = carouselItems.children.length;\n\n    if (direction === \"next\") {\n      currentIndex = (currentIndex + 1) % totalItems;\n    } else if (direction === \"back\") {\n      currentIndex = (currentIndex - 1 + totalItems) % totalItems;\n    }\n\n    carouselItems.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\n  }\n\n  backButton.addEventListener(\"click\", function () {\n    moveCarousel(\"back\");\n  });\n\n  nextButton.addEventListener(\"click\", function () {\n    moveCarousel(\"next\");\n  });\n});\n//group 15 : overlay and succes button\n\nfunction showDialog() {\n  // Show the overlay with a fade-in animation\n  gsap.to(\"#overlay\", {\n    duration: 0.5,\n    opacity: 1,\n    scale: 1,\n    onComplete: () => {\n      gsap.to(\"#dialog\", {\n        duration: 0.5,\n        scale: 1,\n        opacity: 1,\n        ease: \"bounce\",\n      });\n    },\n  });\n}\n\n// Function to hide the dialog box and overlay with GSAP animations\nfunction hideDialog() {\n  // Hide the dialog box with a scale animation\n  gsap.to(\"#dialog\", {\n    duration: 0.5,\n    scale: 0,\n    opacity: 0,\n    onComplete: () => {\n      gsap.to(\"#overlay\", {\n        duration: 0.5,\n        opacity: 0,\n        scale: 0,\n      });\n    },\n  });\n}\n\n// Group 16: firebase\n\n// Initialize Firebase API\nconst firebaseConfig = {\n  apiKey: process.env.FIREBASE_API_KEY,\n  authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.FIREBASE_DATABASE_URL, //databaseURL here\n  projectId: process.env.FIREBASE_PROJECT_ID,\n  storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.FIREBASE_APP_ID,\n  measurementId: process.env.FIREBASE_MEASUREMENT_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n// Function to handle form submission\ndocument.getElementById(\"consultationForm\").addEventListener(\"submit\", function (e) {\n  e.preventDefault();\n  var message = document.getElementById(\"message\").value;\n  var email = document.getElementById(\"email\").value;\n  var name = document.getElementById(\"yourname\").value;\n\n  // Collect checkbox values\n  var webDesign = document.getElementById(\"Web-Design\").checked;\n  var seo = document.getElementById(\"SEO\").checked;\n  var development = document.getElementById(\"Development\").checked;\n  var other = document.getElementById(\"Other\").checked;\n\n  // Determine the consultation type based on checkboxes\n  var consultationType = \"\";\n  if (webDesign) consultationType += \"Web Design, \";\n  if (seo) consultationType += \"SEO, \";\n  if (development) consultationType += \"Development, \";\n  if (other) consultationType += \"Other, \";\n  // Remove the trailing comma and space if any\n  consultationType = consultationType.slice(0, -2);\n\n  // Collect budget radio button value\n  var budget = \"\";\n  var budgetRadios = document.getElementsByName(\"priceGroup\");\n  for (var i = 0; i < budgetRadios.length; i++) {\n    if (budgetRadios[i].checked) {\n      budget = budgetRadios[i].id;\n      break;\n    }\n  }\n\n  // Generate a unique ID for the new entry\n  var newConsultationRef = push(ref(database, \"consultations\"));\n  set(newConsultationRef, {\n    name: name,\n    message: message,\n    budget: budget,\n    consultationType: consultationType,\n    email: email,\n    date: new Date().toISOString(),\n  });\n\n  showDialog();\n\n  document.getElementById(\"consultationForm\").reset();\n});\n\nselect(\".close-dialog\").addEventListener(\"click\", hideDialog);\n\n//Group 16: toggle buttons color for submition\nlet checkboxes = selectAll('input[type=\"checkbox\"]');\n\nconst changeColor = (event) => {\n  let wrapper = event.target.parentNode.querySelector(\".checkbox-input\");\n  wrapper.classList.toggle(\"clicked-color\");\n  let wrappertext = event.target.parentNode.querySelector(\".checkbox-text\");\n  wrappertext.classList.toggle(\"clicked-text\");\n};\n\ncheckboxes.forEach((checkbox) => {\n  checkbox.addEventListener(\"change\", changeColor);\n});\n\nlet checkradios = selectAll('input[type=\"radio\"]');\n\nconst changeColorr = (event) => {\n  // Find the .radio-text element within the parent of the clicked radio button\n  let radiotext = event.target.parentNode.querySelector(\".radio-text\");\n  // Remove 'clicked' class from all .radio-text elements\n  selectAll(\".radio-text\").forEach((rb) => rb.parentElement.classList.remove(\"clicked\"));\n\n  radiotext.parentElement.classList.add(\"clicked\");\n};\n\ncheckradios.forEach((checkradio) => {\n  checkradio.addEventListener(\"change\", changeColorr);\n});\n\n// group 17: dropdown video\n\nfunction playVideo(element) {\n  var video = element.querySelector(\".grid__item-video\");\n  video.play();\n}\n\nfunction resetVideo(element) {\n  var video = element.querySelector(\".grid__item-video\");\n  video.pause();\n  video.currentTime = 0;\n}\n\nfunction toggleVideo(element) {\n  var video = element.querySelector(\".grid__item-video\");\n  if (video.paused) {\n    video.play();\n  } else {\n    video.pause();\n    video.currentTime = 0;\n  }\n}\n\nconst videoDown = (element) => {\n  gsap\n    .timeline({ defaults: { ease: \"expo.out\", delay: 0 } })\n    .fromTo(\n      element.querySelector(\".grid__item-video\"),\n      { y: \"0%\" },\n      { duration: 1.25, y: \"101%\", ease: \"expo.inOut\" },\n      0\n    );\n};\n\nconst videoUp = (element) => {\n  gsap\n    .timeline({ defaults: { ease: \"expo.out\", delay: 0 } })\n    .fromTo(\n      element.querySelector(\".grid__item-video\"),\n      { y: \"101%\" },\n      { duration: 1.25, y: \"0%\", ease: \"expo.inOut\" },\n      0\n    );\n};\n\nlet imgconts = selectAll(\".grid-item-vid\");\n\nimgconts.forEach((imgcont) => {\n  imgcont.addEventListener(\"mouseenter\", () => {\n    let gridItemVideo = imgcont.querySelector(\".grid__item-video\");\n    gridItemVideo.style.display = \"block\";\n    videoDown(imgcont); // Call videoDown on mouseenter\n  });\n});\n\nimgconts.forEach((imgcont) => {\n  imgcont.addEventListener(\"mouseout\", () => {\n    let gridItemVideo = imgcont.querySelector(\".grid__item-video\");\n    videoUp(imgcont); // Call videoUp on mouseout\n\n    setTimeout(() => {\n      resetVideo(imgcont);\n      gridItemVideo.style.display = \"none\";\n    }, 2000);\n  });\n});\n"],"names":["name","version","SDK_VERSION","setSDKVersion","DOMStorageWrapper","constructor","domStorage_","this","prefix_","set","key","value","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","message","i","length","arg","Array","isArray","apply","logger","firstLog_","enableLogging$1","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","error","fatal","Error","warn","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","fn","hasOwnProperty","doubleToIEEE754String","v","bias","s","f","ln","Infinity","Math","abs","pow","min","floor","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","INTEGER_REGEXP_","RegExp","test","intVal","exceptionGuard","setTimeout","stack","setTimeoutNonBlocking","time","timeout","Deno","unrefTimer","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getImmediate","optional","then","getToken","forceRefresh","Promise","resolve","reject","addTokenChangeListener","listener","_a","addTokenListener","notifyForInvalidToken","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","code","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","OWNER","PROTOCOL_VERSION","FORGE_DOMAIN_RE","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","isUsingEmulator","_host","_domain","indexOf","internalHost","isCacheableHost","isCustomHost","newHost","toURLString","protocol","query","repoInfoConnectionURL","repoInfo","type","params","connURL","repoInfoNeedsQueryParam","pairs","StatsCollection","counters_","incrementCounter","amount","deepCopy","collections","reporters","statsManagerGetCollection","hashString","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","callback","handleResponse","requestNum","toProcess","FIREBASE_LONGPOLL_START_PARAM","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","isNodeSdk","document","readyState","called","wrappedFn","body","addEventListener","attachEvent","executeWhenDOMReady","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","random","uniqueCallbackIdentifier","location","hostname","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","href","Windows","UI","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","MAX_URL_DATA_SIZE","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","domain","iframeContents","doc","write","iframe","contentWindow","contentDocument","alive","textContent","myID","myPW","newRequest_","size","theURL","curDataString","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","loadCB","doNodeLongPoll","newScript","async","onload","onreadystatechange","rstate","parentNode","onerror","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","options","device","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","userAgent","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","String","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","ALL_TRANSPORTS","IS_TRANSPORT_INITIALIZED","globalTransportInitialized_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","transport","initialTransport","upgradeTransport","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","handshakePayload","Object","assign","h","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","reason","ServerActions","put","pathString","onComplete","hash","merge","refreshAuthToken","token","refreshAppCheckToken","onDisconnectPut","onDisconnectMerge","onDisconnectCancel","reportStats","stats","EventEmitter","allowedEvents_","listeners_","trigger","eventType","listeners","context","on","validateEventType_","eventData","getInitialEvent","off","splice","find","et","OnlineMonitor","super","online_","isMobileCordova","getInstance","currentlyOnline","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPath","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","Map","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","forceTokenRefresh_","invalidAuthTokenCount_","invalidAppCheckTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","onVisible_","onOnline_","action","onResponse","curReqNum","r","initConnection_","deferred","Deferred","outstandingGet","request","p","_path","q","_queryObject","index","sendGet_","promise","listen","currentHashFn","tag","queryId","_queryIdentifier","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","removeListen_","warnings","safeGet","indexSpec","getIndex","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isAdmin","tryAppCheck","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","onAppCheckRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","undefined","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","Date","getTime","handleTimestamp_","sendConnectStats_","restoreState_","scheduleConnect_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","all","interrupt","resume","isEmpty","delta","serverTimeOffset","map","normalizedPathString","statusCode","explanation","console","replace","queries","values","clientName","isReactNative","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","__EMPTY_NODE","KeyIndex","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","pop","hasNext","peek","LLRBNode","color","RED","SortedMap","EMPTY_NODE","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE$2","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","nodeFromJSON$1","MAX_NODE$1","LeafNode","value_","priorityNode_","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","exportFormat","getValue","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","equals","PRIORITY_INDEX","aPriority","bPriority","indexCmp","LOG_2","Base12Num","num","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","root","base12","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","buildFrom12Array","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","Default","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","sawIndexedValue","iter","newIndex","next","indexName","newIndexSet","newIndexes","addToIndexes","indexedChildren","existingSnap","newChildren","removeFromIndexes","ChildrenNode","children_","indexMap_","child","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","defineProperties","MAX","setMaxNode","USE_HINZE","nodeFromJSON","json","childData","children","childrenHavePriority","childSet","sortedChildSet","setNodeFromJSON","PathIndex","indexPath_","extractChild","snap","aChild","bChild","valueNode","VALUE_INDEX","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","IndexedFilter","index_","newChild","affectedPath","source","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","startIsInclusive_","startAfterSet_","endIsInclusive_","endBeforeSet_","getStartPost","getEndPost","matches","isWithinStart","isWithinEnd","filtered","self","hasStart","startName","getIndexStartName","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","withinDirectionalStart","reverse_","withinEndPost","withinStartPost","withinDirectionalEnd","compareRes","rangedFilter_","limit_","getLimit","isViewFromLeft","fullLimitUpdateChild_","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","inRange","oldChildSnap","nextChild","getChildAfterChild","compareNext","newEventCache","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","hasLimit","hasAnchoredLimit","queryParamsStartAt","queryParams","newParams","queryParamsEndAt","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","startParam","endParam","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","restRequest_","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","getNode","updateSnapshot","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","sparseSnapshotTreeForEachTree","prefixPath","func","forEach","sparseSnapshotTreeForEachChild","StatsListener","collection_","last_","newStats","stat","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","reportedStats","haveStatsToReport","OperationType","newOperationSourceServerTaggedQuery","fromUser","fromServer","tagged","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","operationForChild","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForType","eventGenerator","events","changes","registrations","eventCache","filteredChanges","filter","change","aWrapped","bWrapped","eventGeneratorCompareChanges","materializedChange","prevName","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","ImmutableTree","EmptyChildren","fromObject","childPath","findRootMostMatchingPathAndValue","relativePath","predicate","childExistingPathAndValue","findRootMostValueAndPath","toSet","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","CompoundWrite","writeTree_","empty","compoundWriteAddWrite","compoundWrite","rootmost","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeRemoveWrite","writeId","allWrites","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","visibleWrites","writeTreeLayerTree_","writeTreeDefaultFilter_","lastWriteId","writeTreeResetTree_","writeRecord","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeShadowingWrite","writeTreeRefCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeCalcCompleteChild","writeTreeRefChild","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NO_COMPLETE_CHILD_SOURCE","getCompleteChild","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","viewProcessorApplyOperation","viewProcessor","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","viewProcessorApplyServerOverwrite","changedChildren","curViewCache","viewProcessorCacheHasChild","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","serverChildren","viewProcessorRevertUserWrite","ackPath","mergePath","serverCachePath","viewProcessorAckUserWrite","oldServerNode","viewProcessorGenerateEventCacheAfterServerEvent","viewProcessorListenComplete","isLeafOrEmpty","oldCompleteSnap","viewProcessorMaybeAddValueEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","viewProcessorApplyMerge","viewMergeTree","childMergeTree","isUnknownDeepMerge","View","initialViewCache","eventRegistrations_","indexFilter","processor_","newViewProcessor","initialServerCache","initialEventCache","eventGenerator_","viewGetCompleteServerCache","view","cache","viewIsEmpty","viewRemoveEventRegistration","eventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","eventRegistrations","moves","eventGeneratorGenerateEventsForChanges","referenceConstructor$1","referenceConstructor","SyncPoint","views","syncPointApplyOperation","syncPoint","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","viewAddEventRegistration","initialChanges","viewGetInitialEvents","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","viewQueryId","entries","_repo","syncPointGetQueryViews","syncPointGetCompleteServerCache","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","syncTreeApplyUserOverwrite","syncTree","newData","writeTreeAddOverwrite","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","writeTreeAddMerge","changeTree","syncTreeAckUserWrite","record","writeTreeGetWrite","syncTreeApplyServerOverwrite","syncTreeRemoveEventRegistration","skipListenerDedup","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","maybeChildSyncPoint","childMap","_key","childViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery","defaultTag","stopListening","queryToRemove","tagToRemove","syncTreeMakeQueryKey_","removedQuery","removedQueryKey","removedQueryTag","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","syncTreeApplyTaggedOperation_","syncTreeAddEventRegistration","skipSetupListener","foundAncestorDefaultView","pathToSyncPoint","sp","childSyncPoint","viewAlreadyExists","queriesToStop","childQueries","queryToStop","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","syncTreeGetServerValue","serverCacheNode","viewGetCompleteNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","viewGetServerCache","syncTreeApplyTaggedListenComplete","syncTreeApplyListenComplete","toUpperCase","errorForServerCode","splitIndex","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","op","unused","existingNode","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeGetPath","childEmpty","treeIsEmpty","childExists","treeUpdateChild","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefix","hasDotValue","hasActualChild","validationPathPush","last","validationPathPop","validateFirebaseMergeDataArg","errorPrefix$1","mergePaths","curPath","prevPath","validateFirebaseMergePaths","validatePriority","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","isValidRootPathString","EventQueue","eventLists_","recursionDepth_","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","transactionQueueTree_","persistentConnection_","repoStart","repo","appId","authOverride","search","isMerge","repoOnDataUpdate","repoOnConnectStatus","connectStatus","repoUpdateInfo","repoOnServerInfoUpdate","statsReporter_","creatorFunction","statsManagerGetOrCreateReporter","infoData_","infoSyncTree_","infoEvents","serverSyncTree_","repoServerTime","offset","repoGenerateServerValues","taggedChildren","raw","syncTreeApplyTaggedQueryMerge","taggedSnap","syncTreeApplyServerMerge","repoRerunTransactions","repoLog","resolvedOnDisconnectTree","resolved","repoAbortTransactions","repoRunOnDisconnectEvents","repoGetNextWriteId","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoOnDisconnectCancel","repoOnDisconnectSet","repoRemoveEventCallbackForQuery","repoInterrupt","repoGetLatestState","excludeSets","repoSendReadyTransactions","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","every","transaction","setsToIgnore","txn","currentWriteId","latestState","snapToSend","latestHash","retryCount","currentOutputSnapshotRaw","dataToSend","pathToSend","callbacks","currentOutputSnapshotResolved","unwatcher","abortReason","repoSendTransactionQueue","rootMostTransactionNode","repoGetAncestorTransactionNode","txnsToRerun","abortTransaction","currentNode","currentInputSnapshot","newDataNode","oldWriteId","newNodeResolved","applyLocally","repoRerunTransactionQueue","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","order","nodeQueue","to","treeForEachAncestor","repoAbortTransactionsOnNode","lastSent","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","pathStringDecoded","piece","decodeURIComponent","decodePath","queryString","results","charAt","segment","kv","decodeQuery","hostWithoutPort","dotInd","PUSH_CHARS","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","DataEvent","snapshot","ref","getEventType","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","onValue","expDataSnapshot","previousChildName","call","onCancel","hasCancelCallback","userCallback","OnDisconnect","cancel","wrapCallback","setWithPriority","repoOnDisconnectSetWithPriority","childrenToMerge","repoOnDisconnectUpdate","QueryImpl","_orderByCalled","ReferenceImpl","isEqual","getModularInstance","sameRepo","samePath","sameQueryIdentifier","toJSON","encodeURIComponent","pathToUrlEncodedString","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","parentPath","DataSnapshot","_node","_index","childRef","exists","hasChildren","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","changedKey","changedValue","repoUpdate","callbackContext","container","ValueEventRegistration","cached","err","repoGetValue","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","onceCallback","dataSnapshot","repoAddEventCallbackForQuery","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","expCallback","QueryConstraint","QueryEndAtConstraint","_value","_apply","endAt","QueryEndBeforeConstraint","queryParamsEndBefore","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","queryParamsStartAfter","startAfter","QueryLimitToFirstConstraint","_limit","newLimit","queryParamsLimitToFirst","limitToFirst","limit","QueryLimitToLastConstraint","queryParamsLimitToLast","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","arguments","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","equalTo","queryConstraints","queryImpl","constraint","syncPointSetReferenceConstructor","syncTreeSetReferenceConstructor","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","appRepos","repoManagerCreateRepo","Database","_repoInternal","_instanceStarted","_rootInternal","_delete","appName","repoManagerDeleteRepo","apiName","checkTransportInit","forceWebSockets","forceLongPolling","getDatabase","getApp","_getProvider","identifier","emulator","getDefaultEmulatorHostnameAndPort","connectDatabaseEmulator","tokenProvider","mockUserToken","createMockUserToken","repoManagerApplyEmulatorSettings","goOffline","goOnline","enableLogging","SERVER_TIMESTAMP","serverTimestamp","increment","TransactionResult","committed","runTransaction","transactionUpdate","currentState","queueNode","priorityForNode","repoStartTransaction","prototype","simpleListen","echo","onEcho","hijackHash","newHash","oldPut","forceRestClient","repoManagerForceRestClient","_initStandalone","customAuthImpl","customAppCheckImpl","componentContainer","ComponentContainer","Provider","setComponent","Component","variant","_registerComponent","instanceIdentifier","getProvider","setMultipleInstances","registerVersion","CONSTANTS","NODE_CLIENT","NODE_ADMIN","assertion","stringToByteArray$1","out","charCodeAt","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","charToByteMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","HAS_NATIVE_SUPPORT","atob","input","webSafe","init_","byteToCharMap","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","encodeString","btoa","decodeString","bytes","pos","c1","fromCharCode","c2","u","c3","byteArrayToString","decodeStringToByteArray","charToByteMap","byte4","DecodeBase64StringError","base64urlEncodeWithoutPadding","base64Decode","deepExtend","target","prop","getGlobal","g","getDefaults","__FIREBASE_DEFAULTS__","defaultsJsonString","parse","getDefaultsFromEnvVariable","cookie","decoded","getDefaultsFromCookie","info","getDefaultEmulatorHost","productName","_b","emulatorHosts","separatorIndex","lastIndexOf","getDefaultAppConfig","config","getExperimentalSetting","uid","project","iat","sub","user_id","iss","aud","exp","auth_time","firebase","sign_in_provider","identities","alg","getUA","isNode","forceEnvironment","isBrowser","isBrowserExtension","runtime","chrome","browser","isElectron","isIE","ua","isUWP","isSafari","includes","isIndexedDBAvailable","indexedDB","validateIndexedDBOpenable","preExist","DB_CHECK_NAME","onsuccess","deleteDatabase","onupgradeneeded","areCookiesEnabled","cookieEnabled","FirebaseError","customData","setPrototypeOf","captureStackTrace","ErrorFactory","create","service","serviceName","errors","fullCode","template","PATTERN","_","replaceTemplate","fullMessage","decode","header","claims","signature","parts","isValidTimestamp","validSince","validUntil","issuedAtTime","contextObj","deepEqual","aKeys","bKeys","aProp","bProp","isObject","thing","promiseWithTimeout","timeInMS","deferredPromise","querystringParams","arrayVal","querystringDecode","extractQuerystring","queryStart","fragmentStart","chain_","buf_","W_","pad_","inbuf_","total_","blockSize","reset","compress_","buf","W","lengthMinusBlock","inbuf","totalBits","createSubscribe","executor","onNoObservers","ObserverProxy","subscribe","observers","unsubscribes","observerCount","task","finalized","forEachObserver","observer","nextOrObserver","methods","method","implementsAnyMethods","noop","unsub","unsubscribeOne","finalError","sendOne","onError","validateArgCount","minCount","maxCount","argCount","argError","argName","validateNamespace","validateCallback","validateContextObject","uuidv4","DEFAULT_INTERVAL_MILLIS","DEFAULT_BACKOFF_FACTOR","MAX_VALUE_MILLIS","RANDOM_FACTOR","calculateBackoffMillis","backoffCount","intervalMillis","backoffFactor","currBaseValue","randomWait","ordinal","isFinite","cent","dec","indicator","_delegate","mousepos","x","y","ev","getMousePos","Item","DOM_el","_classCallCheck","_defineProperty","el","deco","previous","current","amt","getRandomString","DOM","querySelector","calculateSizePosition","initEvents","scrollVal","scrollX","scrollY","rect","getBoundingClientRect","_this","randomString","gsap","duration","ease","opacity","loopRender","stopRendering","_this2","isFirstTick","requestId","requestAnimationFrame","render","cancelAnimationFrame","scrollDiff","renderedStyles","top","lerp","innerHTML","clientX","clientY","characters","module","exports","documentMode","rootMargin","threshold","load","nodeName","getAttribute","alt","append","o","poster","setAttribute","backgroundImage","classList","toggle","loaded","A","Element","NodeList","querySelectorAll","IntersectionObserver","intersectionRatio","isIntersecting","unobserve","l","background","observe","triggerLoad","MouseFollower","className","innerClassName","textClassName","mediaClassName","mediaBoxClassName","iconSvgClassName","iconSvgNamePrefix","iconSvgSrc","dataAttr","hiddenState","textState","iconState","activeState","mediaState","stateDetection","visibleOnState","speed","skewing","skewingText","skewingIcon","skewingMedia","skewingDelta","skewingDeltaMax","stickDelta","showTimeout","hideOnLeave","hideTimeout","hideMediaTimeout","initialPos","innerWidth","innerHeight","vel","event","init","registerGSAP","_proto","createSetter","ticker","text","media","mediaBox","setter","quickSetter","rotation","scaleX","scaleY","wc","mouseleave","hide","mouseenter","show","mousedown","addState","mouseup","removeState","mousemoveOnce","mousemove","stick","onUpdate","mouseover","relatedTarget","state","getFromDataset","setText","icon","setIcon","img","setImg","video","setVideo","setStick","mouseout","removeText","removeIcon","removeImg","removeVideo","removeStick","passive","once","force","distance","sqrt","scale","angle","atan2","PI","visibleInt","_this3","_this$el$classList","_this$el$classList2","toggleState","setSkewing","removeSkewing","element","height","width","setMedia","_this4","mediaInt","removeMedia","_this5","mediaImg","Image","mediaVideo","muted","loop","autoplay","play","pause","_arguments","_this6","dataset","destroy","removeEventListener","PlatformLoggerServiceImpl","getPlatformInfoString","getProviders","provider","component","getComponent","isVersionServiceProvider","library","logString","name$o","version$1","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","_components","_addComponent","addComponent","debug","_addOrOverwriteComponent","addOrOverwriteComponent","componentName","heartbeatController","triggerHeartbeat","_removeServiceInstance","clearInstance","_clearComponents","ERRORS","ERROR_FACTORY","FirebaseAppImpl","_isDeleted","_options","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","isDeleted","initializeApp","rawConfig","existingApp","newApp","getApps","deleteApp","libraryKeyOrName","libraryMismatch","versionMismatch","warning","onLog","logCallback","setUserLogHandler","setLogLevel","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","openDB","upgrade","oldVersion","createObjectStore","originalErrorMessage","writeHeartbeatsToIndexedDB","heartbeatObject","tx","objectStore","computeKey","done","idbGetError","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","agent","date","getUTCDateString","heartbeats","lastSentHeartbeatDate","some","singleDateHeartbeat","hbTimestamp","valueOf","getHeartbeatsHeader","heartbeatsToSend","unsentEntries","heartbeatsCache","maxSize","heartbeatEntry","hb","dates","countBytes","extractHeartbeatsForHeader","headerString","toISOString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","idbHeartbeatObject","readHeartbeatsFromIndexedDB","heartbeatsObject","existingHeartbeatsObject","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setServiceProps","props","setInstanceCreatedCallback","instances","instancesDeferred","instancesOptions","onInitCallbacks","normalizedIdentifier","normalizeInstanceIdentifier","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","isComponentEager","instanceDeferred","services","INTERNAL","isComponentSet","getOptions","initialize","opts","existingCallbacks","existingInstance","invokeOnInitCallbacks","providers","levelStringToEnum","DEBUG","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","logType","_logLevel","_logHandler","_userLogHandler","TypeError","logHandler","userLogHandler","level","inst","customLogLevel","ignored","blocked","blocking","terminated","openPromise","w","newVersion","deleteDB","readMethods","writeMethods","cachedMethods","getMethod","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","storeName","store","oldTraps","receiver","instanceOfAny","object","constructors","idbProxyableTypes","cursorAdvanceMethods","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","IDBTransaction","objectStoreNames","wrap","replaceTraps","wrapFunction","IDBCursor","advance","continue","continuePrimaryKey","unwrap","storeNames","transformCachableValue","DOMException","cacheDonePromiseForTransaction","Proxy","IDBRequest","promisifyRequest","newValue","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","defineProperty","enumerable","globalThis","Function","Symbol","toStringTag","select","selectAll","lozad","serviceWorker","register","midmoon","menuclose","smoother","ScrollSmoother","smooth","effects","smoothTouch","fetch","_loop","assignLinks","menuUziItemLink","defaultImage","rotateremoji","timeline","repeat","kill","registerPlugin","ScrollTrigger","ScrollToPlugin","SplitText","herolargelogo","wordsClass","splitchar","charsClass","herowords","heroSeparator","heroimageWrapper","defaults","delay","addLabel","fromTo","stagger","transformOrigin","slide","imageWrapper","heroParallax","scrollTrigger","scrub","end","markers","scrollTo","lineTrigger","linetimeline","afterPseudotl","lineTimeline","animation","onEnter","onLeaveBack","toTopbutton","showTotop","documentElement","scrollTop","cursor","details","content","summary","overflow","hasAttribute","removeAttribute","scrollHeight","preventDefault","accordionItems","accordionItem","sibling","elephant","elephant_wrapper","peanutWrapper","peanutcursor","darkSections","utils","toArray","arrowWrapper","arrowpath","menuName","menuDotline","makedark","stroke","fill","makewhite","darkSection","endtrigger","onLeave","onEnterBack","worldvideoWrapper","worldvideo","toggleActions","borderRadius","paused","playPromise","carouselItems","backButton","nextButton","currentIndex","moveCarousel","direction","itemWidth","offsetWidth","totalItems","transform","apiKey","authDomain","storageBucket","messagingSenderId","measurementId","database","getElementById","email","consultationType","checked","budget","budgetRadios","getElementsByName","newConsultationRef","checkboxes","changeColor","checkbox","checkradios","changeColorr","radiotext","rb","parentElement","checkradio","imgconts","imgcont","gridItemVideo","currentTime","resetVideo"],"sourceRoot":""}